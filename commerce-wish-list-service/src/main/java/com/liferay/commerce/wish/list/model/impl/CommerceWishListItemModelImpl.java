/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.wish.list.model.impl;

import com.liferay.commerce.wish.list.model.CommerceWishListItem;
import com.liferay.commerce.wish.list.model.CommerceWishListItemModel;
import com.liferay.commerce.wish.list.model.CommerceWishListItemSoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceWishListItem service. Represents a row in the &quot;CommerceWishListItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>CommerceWishListItemModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceWishListItemImpl}.
 * </p>
 *
 * @author Andrea Di Giorgi
 * @see CommerceWishListItemImpl
 * @generated
 */
@JSON(strict = true)
public class CommerceWishListItemModelImpl
	extends BaseModelImpl<CommerceWishListItem>
	implements CommerceWishListItemModel {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce wish list item model instance should use the <code>CommerceWishListItem</code> interface instead.
	 */
	public static final String TABLE_NAME = "CommerceWishListItem";

	public static final Object[][] TABLE_COLUMNS = {
		{"commerceWishListItemId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"commerceWishListId", Types.BIGINT},
		{"CPInstanceUuid", Types.VARCHAR}, {"CProductId", Types.BIGINT},
		{"json", Types.CLOB}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("commerceWishListItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("commerceWishListId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("CPInstanceUuid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CProductId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("json", Types.CLOB);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CommerceWishListItem (commerceWishListItemId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,commerceWishListId LONG,CPInstanceUuid VARCHAR(75) null,CProductId LONG,json TEXT null)";

	public static final String TABLE_SQL_DROP =
		"drop table CommerceWishListItem";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceWishListItem.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CommerceWishListItem.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.wish.list.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.commerce.wish.list.model.CommerceWishListItem"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.wish.list.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.commerce.wish.list.model.CommerceWishListItem"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.wish.list.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.commerce.wish.list.model.CommerceWishListItem"),
		true);

	public static final long CPINSTANCEUUID_COLUMN_BITMASK = 1L;

	public static final long CPRODUCTID_COLUMN_BITMASK = 2L;

	public static final long COMMERCEWISHLISTID_COLUMN_BITMASK = 4L;

	public static final long CREATEDATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceWishListItem toModel(
		CommerceWishListItemSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		CommerceWishListItem model = new CommerceWishListItemImpl();

		model.setCommerceWishListItemId(soapModel.getCommerceWishListItemId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCommerceWishListId(soapModel.getCommerceWishListId());
		model.setCPInstanceUuid(soapModel.getCPInstanceUuid());
		model.setCProductId(soapModel.getCProductId());
		model.setJson(soapModel.getJson());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceWishListItem> toModels(
		CommerceWishListItemSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommerceWishListItem> models = new ArrayList<CommerceWishListItem>(
			soapModels.length);

		for (CommerceWishListItemSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.wish.list.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.wish.list.model.CommerceWishListItem"));

	public CommerceWishListItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceWishListItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceWishListItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceWishListItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceWishListItem.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceWishListItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceWishListItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommerceWishListItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceWishListItem, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CommerceWishListItem)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceWishListItem, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceWishListItem, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceWishListItem)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceWishListItem, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommerceWishListItem, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, CommerceWishListItem>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CommerceWishListItem.class.getClassLoader(),
			CommerceWishListItem.class, ModelWrapper.class);

		try {
			Constructor<CommerceWishListItem> constructor =
				(Constructor<CommerceWishListItem>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<CommerceWishListItem, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CommerceWishListItem, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceWishListItem, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<CommerceWishListItem, Object>>();
		Map<String, BiConsumer<CommerceWishListItem, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CommerceWishListItem, ?>>();

		attributeGetterFunctions.put(
			"commerceWishListItemId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCommerceWishListItemId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceWishListItemId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object commerceWishListItemId) {

					commerceWishListItem.setCommerceWishListItemId(
						(Long)commerceWishListItemId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem, Object groupId) {

					commerceWishListItem.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object companyId) {

					commerceWishListItem.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem, Object userId) {

					commerceWishListItem.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object userName) {

					commerceWishListItem.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object createDate) {

					commerceWishListItem.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object modifiedDate) {

					commerceWishListItem.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"commerceWishListId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCommerceWishListId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceWishListId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object commerceWishListId) {

					commerceWishListItem.setCommerceWishListId(
						(Long)commerceWishListId);
				}

			});
		attributeGetterFunctions.put(
			"CPInstanceUuid",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCPInstanceUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"CPInstanceUuid",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object CPInstanceUuid) {

					commerceWishListItem.setCPInstanceUuid(
						(String)CPInstanceUuid);
				}

			});
		attributeGetterFunctions.put(
			"CProductId",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getCProductId();
				}

			});
		attributeSetterBiConsumers.put(
			"CProductId",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem,
					Object CProductId) {

					commerceWishListItem.setCProductId((Long)CProductId);
				}

			});
		attributeGetterFunctions.put(
			"json",
			new Function<CommerceWishListItem, Object>() {

				@Override
				public Object apply(CommerceWishListItem commerceWishListItem) {
					return commerceWishListItem.getJson();
				}

			});
		attributeSetterBiConsumers.put(
			"json",
			new BiConsumer<CommerceWishListItem, Object>() {

				@Override
				public void accept(
					CommerceWishListItem commerceWishListItem, Object json) {

					commerceWishListItem.setJson((String)json);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getCommerceWishListItemId() {
		return _commerceWishListItemId;
	}

	@Override
	public void setCommerceWishListItemId(long commerceWishListItemId) {
		_commerceWishListItemId = commerceWishListItemId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCommerceWishListId() {
		return _commerceWishListId;
	}

	@Override
	public void setCommerceWishListId(long commerceWishListId) {
		_columnBitmask |= COMMERCEWISHLISTID_COLUMN_BITMASK;

		if (!_setOriginalCommerceWishListId) {
			_setOriginalCommerceWishListId = true;

			_originalCommerceWishListId = _commerceWishListId;
		}

		_commerceWishListId = commerceWishListId;
	}

	public long getOriginalCommerceWishListId() {
		return _originalCommerceWishListId;
	}

	@JSON
	@Override
	public String getCPInstanceUuid() {
		if (_CPInstanceUuid == null) {
			return "";
		}
		else {
			return _CPInstanceUuid;
		}
	}

	@Override
	public void setCPInstanceUuid(String CPInstanceUuid) {
		_columnBitmask |= CPINSTANCEUUID_COLUMN_BITMASK;

		if (_originalCPInstanceUuid == null) {
			_originalCPInstanceUuid = _CPInstanceUuid;
		}

		_CPInstanceUuid = CPInstanceUuid;
	}

	public String getOriginalCPInstanceUuid() {
		return GetterUtil.getString(_originalCPInstanceUuid);
	}

	@JSON
	@Override
	public long getCProductId() {
		return _CProductId;
	}

	@Override
	public void setCProductId(long CProductId) {
		_columnBitmask |= CPRODUCTID_COLUMN_BITMASK;

		if (!_setOriginalCProductId) {
			_setOriginalCProductId = true;

			_originalCProductId = _CProductId;
		}

		_CProductId = CProductId;
	}

	public long getOriginalCProductId() {
		return _originalCProductId;
	}

	@JSON
	@Override
	public String getJson() {
		if (_json == null) {
			return "";
		}
		else {
			return _json;
		}
	}

	@Override
	public void setJson(String json) {
		_json = json;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommerceWishListItem.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceWishListItem toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommerceWishListItem>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceWishListItemImpl commerceWishListItemImpl =
			new CommerceWishListItemImpl();

		commerceWishListItemImpl.setCommerceWishListItemId(
			getCommerceWishListItemId());
		commerceWishListItemImpl.setGroupId(getGroupId());
		commerceWishListItemImpl.setCompanyId(getCompanyId());
		commerceWishListItemImpl.setUserId(getUserId());
		commerceWishListItemImpl.setUserName(getUserName());
		commerceWishListItemImpl.setCreateDate(getCreateDate());
		commerceWishListItemImpl.setModifiedDate(getModifiedDate());
		commerceWishListItemImpl.setCommerceWishListId(getCommerceWishListId());
		commerceWishListItemImpl.setCPInstanceUuid(getCPInstanceUuid());
		commerceWishListItemImpl.setCProductId(getCProductId());
		commerceWishListItemImpl.setJson(getJson());

		commerceWishListItemImpl.resetOriginalValues();

		return commerceWishListItemImpl;
	}

	@Override
	public int compareTo(CommerceWishListItem commerceWishListItem) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), commerceWishListItem.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceWishListItem)) {
			return false;
		}

		CommerceWishListItem commerceWishListItem = (CommerceWishListItem)obj;

		long primaryKey = commerceWishListItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceWishListItemModelImpl commerceWishListItemModelImpl = this;

		commerceWishListItemModelImpl._setModifiedDate = false;

		commerceWishListItemModelImpl._originalCommerceWishListId =
			commerceWishListItemModelImpl._commerceWishListId;

		commerceWishListItemModelImpl._setOriginalCommerceWishListId = false;

		commerceWishListItemModelImpl._originalCPInstanceUuid =
			commerceWishListItemModelImpl._CPInstanceUuid;

		commerceWishListItemModelImpl._originalCProductId =
			commerceWishListItemModelImpl._CProductId;

		commerceWishListItemModelImpl._setOriginalCProductId = false;

		commerceWishListItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceWishListItem> toCacheModel() {
		CommerceWishListItemCacheModel commerceWishListItemCacheModel =
			new CommerceWishListItemCacheModel();

		commerceWishListItemCacheModel.commerceWishListItemId =
			getCommerceWishListItemId();

		commerceWishListItemCacheModel.groupId = getGroupId();

		commerceWishListItemCacheModel.companyId = getCompanyId();

		commerceWishListItemCacheModel.userId = getUserId();

		commerceWishListItemCacheModel.userName = getUserName();

		String userName = commerceWishListItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceWishListItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceWishListItemCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceWishListItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceWishListItemCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commerceWishListItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceWishListItemCacheModel.commerceWishListId =
			getCommerceWishListId();

		commerceWishListItemCacheModel.CPInstanceUuid = getCPInstanceUuid();

		String CPInstanceUuid = commerceWishListItemCacheModel.CPInstanceUuid;

		if ((CPInstanceUuid != null) && (CPInstanceUuid.length() == 0)) {
			commerceWishListItemCacheModel.CPInstanceUuid = null;
		}

		commerceWishListItemCacheModel.CProductId = getCProductId();

		commerceWishListItemCacheModel.json = getJson();

		String json = commerceWishListItemCacheModel.json;

		if ((json != null) && (json.length() == 0)) {
			commerceWishListItemCacheModel.json = null;
		}

		return commerceWishListItemCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceWishListItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommerceWishListItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceWishListItem, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((CommerceWishListItem)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceWishListItem, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommerceWishListItem, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceWishListItem, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((CommerceWishListItem)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CommerceWishListItem>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _commerceWishListItemId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _commerceWishListId;
	private long _originalCommerceWishListId;
	private boolean _setOriginalCommerceWishListId;
	private String _CPInstanceUuid;
	private String _originalCPInstanceUuid;
	private long _CProductId;
	private long _originalCProductId;
	private boolean _setOriginalCProductId;
	private String _json;
	private long _columnBitmask;
	private CommerceWishListItem _escapedModel;

}
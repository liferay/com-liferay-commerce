/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.model.impl;

import com.liferay.commerce.model.CommerceShipment;
import com.liferay.commerce.model.CommerceShipmentModel;
import com.liferay.commerce.model.CommerceShipmentSoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceShipment service. Represents a row in the &quot;CommerceShipment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>CommerceShipmentModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceShipmentImpl}.
 * </p>
 *
 * @author Alessio Antonio Rendina
 * @see CommerceShipmentImpl
 * @generated
 */
@JSON(strict = true)
public class CommerceShipmentModelImpl
	extends BaseModelImpl<CommerceShipment> implements CommerceShipmentModel {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce shipment model instance should use the <code>CommerceShipment</code> interface instead.
	 */
	public static final String TABLE_NAME = "CommerceShipment";

	public static final Object[][] TABLE_COLUMNS = {
		{"commerceShipmentId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"commerceAccountId", Types.BIGINT},
		{"shippingName", Types.VARCHAR}, {"shippingDescription", Types.VARCHAR},
		{"shippingStreet1", Types.VARCHAR}, {"shippingStreet2", Types.VARCHAR},
		{"shippingStreet3", Types.VARCHAR}, {"shippingCity", Types.VARCHAR},
		{"shippingZip", Types.VARCHAR}, {"shippingRegionId", Types.BIGINT},
		{"shippingCountryId", Types.BIGINT},
		{"shippingPhoneNumber", Types.VARCHAR},
		{"commerceShippingMethodId", Types.BIGINT},
		{"shippingOptionName", Types.VARCHAR}, {"carrier", Types.VARCHAR},
		{"trackingNumber", Types.VARCHAR}, {"shippingDate", Types.TIMESTAMP},
		{"expectedDate", Types.TIMESTAMP}, {"status", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("commerceShipmentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("commerceAccountId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingStreet1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingStreet2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingStreet3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingZip", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingRegionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingCountryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingPhoneNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commerceShippingMethodId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingOptionName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("carrier", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trackingNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shippingDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expectedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CommerceShipment (commerceShipmentId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,commerceAccountId LONG,shippingName VARCHAR(75) null,shippingDescription VARCHAR(75) null,shippingStreet1 VARCHAR(75) null,shippingStreet2 VARCHAR(75) null,shippingStreet3 VARCHAR(75) null,shippingCity VARCHAR(75) null,shippingZip VARCHAR(75) null,shippingRegionId LONG,shippingCountryId LONG,shippingPhoneNumber VARCHAR(75) null,commerceShippingMethodId LONG,shippingOptionName VARCHAR(75) null,carrier VARCHAR(75) null,trackingNumber VARCHAR(75) null,shippingDate DATE null,expectedDate DATE null,status INTEGER)";

	public static final String TABLE_SQL_DROP = "drop table CommerceShipment";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceShipment.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CommerceShipment.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.commerce.model.CommerceShipment"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.commerce.model.CommerceShipment"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.commerce.model.CommerceShipment"),
		true);

	public static final long GROUPID_COLUMN_BITMASK = 1L;

	public static final long STATUS_COLUMN_BITMASK = 2L;

	public static final long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceShipment toModel(CommerceShipmentSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CommerceShipment model = new CommerceShipmentImpl();

		model.setCommerceShipmentId(soapModel.getCommerceShipmentId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCommerceAccountId(soapModel.getCommerceAccountId());
		model.setShippingName(soapModel.getShippingName());
		model.setShippingDescription(soapModel.getShippingDescription());
		model.setShippingStreet1(soapModel.getShippingStreet1());
		model.setShippingStreet2(soapModel.getShippingStreet2());
		model.setShippingStreet3(soapModel.getShippingStreet3());
		model.setShippingCity(soapModel.getShippingCity());
		model.setShippingZip(soapModel.getShippingZip());
		model.setShippingRegionId(soapModel.getShippingRegionId());
		model.setShippingCountryId(soapModel.getShippingCountryId());
		model.setShippingPhoneNumber(soapModel.getShippingPhoneNumber());
		model.setCommerceShippingMethodId(
			soapModel.getCommerceShippingMethodId());
		model.setShippingOptionName(soapModel.getShippingOptionName());
		model.setCarrier(soapModel.getCarrier());
		model.setTrackingNumber(soapModel.getTrackingNumber());
		model.setShippingDate(soapModel.getShippingDate());
		model.setExpectedDate(soapModel.getExpectedDate());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceShipment> toModels(
		CommerceShipmentSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommerceShipment> models = new ArrayList<CommerceShipment>(
			soapModels.length);

		for (CommerceShipmentSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.model.CommerceShipment"));

	public CommerceShipmentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceShipmentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceShipmentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceShipmentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceShipment.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceShipment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceShipment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommerceShipment, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceShipment, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CommerceShipment)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceShipment, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceShipment, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceShipment)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceShipment, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommerceShipment, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, CommerceShipment>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CommerceShipment.class.getClassLoader(), CommerceShipment.class,
			ModelWrapper.class);

		try {
			Constructor<CommerceShipment> constructor =
				(Constructor<CommerceShipment>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map<String, Function<CommerceShipment, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CommerceShipment, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceShipment, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<CommerceShipment, Object>>();
		Map<String, BiConsumer<CommerceShipment, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<CommerceShipment, ?>>();

		attributeGetterFunctions.put(
			"commerceShipmentId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCommerceShipmentId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceShipmentId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object commerceShipmentIdObject) {

					commerceShipment.setCommerceShipmentId(
						(Long)commerceShipmentIdObject);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object groupIdObject) {

					commerceShipment.setGroupId((Long)groupIdObject);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object companyIdObject) {

					commerceShipment.setCompanyId((Long)companyIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object userIdObject) {

					commerceShipment.setUserId((Long)userIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object userNameObject) {

					commerceShipment.setUserName((String)userNameObject);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object createDateObject) {

					commerceShipment.setCreateDate((Date)createDateObject);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object modifiedDateObject) {

					commerceShipment.setModifiedDate((Date)modifiedDateObject);
				}

			});
		attributeGetterFunctions.put(
			"commerceAccountId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCommerceAccountId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceAccountId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object commerceAccountIdObject) {

					commerceShipment.setCommerceAccountId(
						(Long)commerceAccountIdObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingName",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingName();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingName",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingNameObject) {

					commerceShipment.setShippingName(
						(String)shippingNameObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingDescription",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingDescription();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingDescription",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingDescriptionObject) {

					commerceShipment.setShippingDescription(
						(String)shippingDescriptionObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingStreet1",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingStreet1();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingStreet1",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingStreet1Object) {

					commerceShipment.setShippingStreet1(
						(String)shippingStreet1Object);
				}

			});
		attributeGetterFunctions.put(
			"shippingStreet2",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingStreet2();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingStreet2",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingStreet2Object) {

					commerceShipment.setShippingStreet2(
						(String)shippingStreet2Object);
				}

			});
		attributeGetterFunctions.put(
			"shippingStreet3",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingStreet3();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingStreet3",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingStreet3Object) {

					commerceShipment.setShippingStreet3(
						(String)shippingStreet3Object);
				}

			});
		attributeGetterFunctions.put(
			"shippingCity",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingCity();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingCity",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingCityObject) {

					commerceShipment.setShippingCity(
						(String)shippingCityObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingZip",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingZip();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingZip",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingZipObject) {

					commerceShipment.setShippingZip((String)shippingZipObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingRegionId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingRegionId();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingRegionId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingRegionIdObject) {

					commerceShipment.setShippingRegionId(
						(Long)shippingRegionIdObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingCountryId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingCountryId();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingCountryId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingCountryIdObject) {

					commerceShipment.setShippingCountryId(
						(Long)shippingCountryIdObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingPhoneNumber",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingPhoneNumber();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingPhoneNumber",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingPhoneNumberObject) {

					commerceShipment.setShippingPhoneNumber(
						(String)shippingPhoneNumberObject);
				}

			});
		attributeGetterFunctions.put(
			"commerceShippingMethodId",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCommerceShippingMethodId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceShippingMethodId",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object commerceShippingMethodIdObject) {

					commerceShipment.setCommerceShippingMethodId(
						(Long)commerceShippingMethodIdObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingOptionName",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingOptionName();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingOptionName",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingOptionNameObject) {

					commerceShipment.setShippingOptionName(
						(String)shippingOptionNameObject);
				}

			});
		attributeGetterFunctions.put(
			"carrier",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getCarrier();
				}

			});
		attributeSetterBiConsumers.put(
			"carrier",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object carrierObject) {

					commerceShipment.setCarrier((String)carrierObject);
				}

			});
		attributeGetterFunctions.put(
			"trackingNumber",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getTrackingNumber();
				}

			});
		attributeSetterBiConsumers.put(
			"trackingNumber",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object trackingNumberObject) {

					commerceShipment.setTrackingNumber(
						(String)trackingNumberObject);
				}

			});
		attributeGetterFunctions.put(
			"shippingDate",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getShippingDate();
				}

			});
		attributeSetterBiConsumers.put(
			"shippingDate",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object shippingDateObject) {

					commerceShipment.setShippingDate((Date)shippingDateObject);
				}

			});
		attributeGetterFunctions.put(
			"expectedDate",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getExpectedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"expectedDate",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment,
					Object expectedDateObject) {

					commerceShipment.setExpectedDate((Date)expectedDateObject);
				}

			});
		attributeGetterFunctions.put(
			"status",
			new Function<CommerceShipment, Object>() {

				@Override
				public Object apply(CommerceShipment commerceShipment) {
					return commerceShipment.getStatus();
				}

			});
		attributeSetterBiConsumers.put(
			"status",
			new BiConsumer<CommerceShipment, Object>() {

				@Override
				public void accept(
					CommerceShipment commerceShipment, Object statusObject) {

					commerceShipment.setStatus((Integer)statusObject);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getCommerceShipmentId() {
		return _commerceShipmentId;
	}

	@Override
	public void setCommerceShipmentId(long commerceShipmentId) {
		_commerceShipmentId = commerceShipmentId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCommerceAccountId() {
		return _commerceAccountId;
	}

	@Override
	public void setCommerceAccountId(long commerceAccountId) {
		_commerceAccountId = commerceAccountId;
	}

	@JSON
	@Override
	public String getShippingName() {
		if (_shippingName == null) {
			return "";
		}
		else {
			return _shippingName;
		}
	}

	@Override
	public void setShippingName(String shippingName) {
		_shippingName = shippingName;
	}

	@JSON
	@Override
	public String getShippingDescription() {
		if (_shippingDescription == null) {
			return "";
		}
		else {
			return _shippingDescription;
		}
	}

	@Override
	public void setShippingDescription(String shippingDescription) {
		_shippingDescription = shippingDescription;
	}

	@JSON
	@Override
	public String getShippingStreet1() {
		if (_shippingStreet1 == null) {
			return "";
		}
		else {
			return _shippingStreet1;
		}
	}

	@Override
	public void setShippingStreet1(String shippingStreet1) {
		_shippingStreet1 = shippingStreet1;
	}

	@JSON
	@Override
	public String getShippingStreet2() {
		if (_shippingStreet2 == null) {
			return "";
		}
		else {
			return _shippingStreet2;
		}
	}

	@Override
	public void setShippingStreet2(String shippingStreet2) {
		_shippingStreet2 = shippingStreet2;
	}

	@JSON
	@Override
	public String getShippingStreet3() {
		if (_shippingStreet3 == null) {
			return "";
		}
		else {
			return _shippingStreet3;
		}
	}

	@Override
	public void setShippingStreet3(String shippingStreet3) {
		_shippingStreet3 = shippingStreet3;
	}

	@JSON
	@Override
	public String getShippingCity() {
		if (_shippingCity == null) {
			return "";
		}
		else {
			return _shippingCity;
		}
	}

	@Override
	public void setShippingCity(String shippingCity) {
		_shippingCity = shippingCity;
	}

	@JSON
	@Override
	public String getShippingZip() {
		if (_shippingZip == null) {
			return "";
		}
		else {
			return _shippingZip;
		}
	}

	@Override
	public void setShippingZip(String shippingZip) {
		_shippingZip = shippingZip;
	}

	@JSON
	@Override
	public long getShippingRegionId() {
		return _shippingRegionId;
	}

	@Override
	public void setShippingRegionId(long shippingRegionId) {
		_shippingRegionId = shippingRegionId;
	}

	@JSON
	@Override
	public long getShippingCountryId() {
		return _shippingCountryId;
	}

	@Override
	public void setShippingCountryId(long shippingCountryId) {
		_shippingCountryId = shippingCountryId;
	}

	@JSON
	@Override
	public String getShippingPhoneNumber() {
		if (_shippingPhoneNumber == null) {
			return "";
		}
		else {
			return _shippingPhoneNumber;
		}
	}

	@Override
	public void setShippingPhoneNumber(String shippingPhoneNumber) {
		_shippingPhoneNumber = shippingPhoneNumber;
	}

	@JSON
	@Override
	public long getCommerceShippingMethodId() {
		return _commerceShippingMethodId;
	}

	@Override
	public void setCommerceShippingMethodId(long commerceShippingMethodId) {
		_commerceShippingMethodId = commerceShippingMethodId;
	}

	@JSON
	@Override
	public String getShippingOptionName() {
		if (_shippingOptionName == null) {
			return "";
		}
		else {
			return _shippingOptionName;
		}
	}

	@Override
	public void setShippingOptionName(String shippingOptionName) {
		_shippingOptionName = shippingOptionName;
	}

	@JSON
	@Override
	public String getCarrier() {
		if (_carrier == null) {
			return "";
		}
		else {
			return _carrier;
		}
	}

	@Override
	public void setCarrier(String carrier) {
		_carrier = carrier;
	}

	@JSON
	@Override
	public String getTrackingNumber() {
		if (_trackingNumber == null) {
			return "";
		}
		else {
			return _trackingNumber;
		}
	}

	@Override
	public void setTrackingNumber(String trackingNumber) {
		_trackingNumber = trackingNumber;
	}

	@JSON
	@Override
	public Date getShippingDate() {
		return _shippingDate;
	}

	@Override
	public void setShippingDate(Date shippingDate) {
		_shippingDate = shippingDate;
	}

	@JSON
	@Override
	public Date getExpectedDate() {
		return _expectedDate;
	}

	@Override
	public void setExpectedDate(Date expectedDate) {
		_expectedDate = expectedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommerceShipment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceShipment toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommerceShipment>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceShipmentImpl commerceShipmentImpl = new CommerceShipmentImpl();

		commerceShipmentImpl.setCommerceShipmentId(getCommerceShipmentId());
		commerceShipmentImpl.setGroupId(getGroupId());
		commerceShipmentImpl.setCompanyId(getCompanyId());
		commerceShipmentImpl.setUserId(getUserId());
		commerceShipmentImpl.setUserName(getUserName());
		commerceShipmentImpl.setCreateDate(getCreateDate());
		commerceShipmentImpl.setModifiedDate(getModifiedDate());
		commerceShipmentImpl.setCommerceAccountId(getCommerceAccountId());
		commerceShipmentImpl.setShippingName(getShippingName());
		commerceShipmentImpl.setShippingDescription(getShippingDescription());
		commerceShipmentImpl.setShippingStreet1(getShippingStreet1());
		commerceShipmentImpl.setShippingStreet2(getShippingStreet2());
		commerceShipmentImpl.setShippingStreet3(getShippingStreet3());
		commerceShipmentImpl.setShippingCity(getShippingCity());
		commerceShipmentImpl.setShippingZip(getShippingZip());
		commerceShipmentImpl.setShippingRegionId(getShippingRegionId());
		commerceShipmentImpl.setShippingCountryId(getShippingCountryId());
		commerceShipmentImpl.setShippingPhoneNumber(getShippingPhoneNumber());
		commerceShipmentImpl.setCommerceShippingMethodId(
			getCommerceShippingMethodId());
		commerceShipmentImpl.setShippingOptionName(getShippingOptionName());
		commerceShipmentImpl.setCarrier(getCarrier());
		commerceShipmentImpl.setTrackingNumber(getTrackingNumber());
		commerceShipmentImpl.setShippingDate(getShippingDate());
		commerceShipmentImpl.setExpectedDate(getExpectedDate());
		commerceShipmentImpl.setStatus(getStatus());

		commerceShipmentImpl.resetOriginalValues();

		return commerceShipmentImpl;
	}

	@Override
	public int compareTo(CommerceShipment commerceShipment) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), commerceShipment.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceShipment)) {
			return false;
		}

		CommerceShipment commerceShipment = (CommerceShipment)obj;

		long primaryKey = commerceShipment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceShipmentModelImpl commerceShipmentModelImpl = this;

		commerceShipmentModelImpl._originalGroupId =
			commerceShipmentModelImpl._groupId;

		commerceShipmentModelImpl._setOriginalGroupId = false;

		commerceShipmentModelImpl._setModifiedDate = false;

		commerceShipmentModelImpl._originalStatus =
			commerceShipmentModelImpl._status;

		commerceShipmentModelImpl._setOriginalStatus = false;

		commerceShipmentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceShipment> toCacheModel() {
		CommerceShipmentCacheModel commerceShipmentCacheModel =
			new CommerceShipmentCacheModel();

		commerceShipmentCacheModel.commerceShipmentId = getCommerceShipmentId();

		commerceShipmentCacheModel.groupId = getGroupId();

		commerceShipmentCacheModel.companyId = getCompanyId();

		commerceShipmentCacheModel.userId = getUserId();

		commerceShipmentCacheModel.userName = getUserName();

		String userName = commerceShipmentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceShipmentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceShipmentCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceShipmentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceShipmentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			commerceShipmentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceShipmentCacheModel.commerceAccountId = getCommerceAccountId();

		commerceShipmentCacheModel.shippingName = getShippingName();

		String shippingName = commerceShipmentCacheModel.shippingName;

		if ((shippingName != null) && (shippingName.length() == 0)) {
			commerceShipmentCacheModel.shippingName = null;
		}

		commerceShipmentCacheModel.shippingDescription =
			getShippingDescription();

		String shippingDescription =
			commerceShipmentCacheModel.shippingDescription;

		if ((shippingDescription != null) &&
			(shippingDescription.length() == 0)) {

			commerceShipmentCacheModel.shippingDescription = null;
		}

		commerceShipmentCacheModel.shippingStreet1 = getShippingStreet1();

		String shippingStreet1 = commerceShipmentCacheModel.shippingStreet1;

		if ((shippingStreet1 != null) && (shippingStreet1.length() == 0)) {
			commerceShipmentCacheModel.shippingStreet1 = null;
		}

		commerceShipmentCacheModel.shippingStreet2 = getShippingStreet2();

		String shippingStreet2 = commerceShipmentCacheModel.shippingStreet2;

		if ((shippingStreet2 != null) && (shippingStreet2.length() == 0)) {
			commerceShipmentCacheModel.shippingStreet2 = null;
		}

		commerceShipmentCacheModel.shippingStreet3 = getShippingStreet3();

		String shippingStreet3 = commerceShipmentCacheModel.shippingStreet3;

		if ((shippingStreet3 != null) && (shippingStreet3.length() == 0)) {
			commerceShipmentCacheModel.shippingStreet3 = null;
		}

		commerceShipmentCacheModel.shippingCity = getShippingCity();

		String shippingCity = commerceShipmentCacheModel.shippingCity;

		if ((shippingCity != null) && (shippingCity.length() == 0)) {
			commerceShipmentCacheModel.shippingCity = null;
		}

		commerceShipmentCacheModel.shippingZip = getShippingZip();

		String shippingZip = commerceShipmentCacheModel.shippingZip;

		if ((shippingZip != null) && (shippingZip.length() == 0)) {
			commerceShipmentCacheModel.shippingZip = null;
		}

		commerceShipmentCacheModel.shippingRegionId = getShippingRegionId();

		commerceShipmentCacheModel.shippingCountryId = getShippingCountryId();

		commerceShipmentCacheModel.shippingPhoneNumber =
			getShippingPhoneNumber();

		String shippingPhoneNumber =
			commerceShipmentCacheModel.shippingPhoneNumber;

		if ((shippingPhoneNumber != null) &&
			(shippingPhoneNumber.length() == 0)) {

			commerceShipmentCacheModel.shippingPhoneNumber = null;
		}

		commerceShipmentCacheModel.commerceShippingMethodId =
			getCommerceShippingMethodId();

		commerceShipmentCacheModel.shippingOptionName = getShippingOptionName();

		String shippingOptionName =
			commerceShipmentCacheModel.shippingOptionName;

		if ((shippingOptionName != null) &&
			(shippingOptionName.length() == 0)) {

			commerceShipmentCacheModel.shippingOptionName = null;
		}

		commerceShipmentCacheModel.carrier = getCarrier();

		String carrier = commerceShipmentCacheModel.carrier;

		if ((carrier != null) && (carrier.length() == 0)) {
			commerceShipmentCacheModel.carrier = null;
		}

		commerceShipmentCacheModel.trackingNumber = getTrackingNumber();

		String trackingNumber = commerceShipmentCacheModel.trackingNumber;

		if ((trackingNumber != null) && (trackingNumber.length() == 0)) {
			commerceShipmentCacheModel.trackingNumber = null;
		}

		Date shippingDate = getShippingDate();

		if (shippingDate != null) {
			commerceShipmentCacheModel.shippingDate = shippingDate.getTime();
		}
		else {
			commerceShipmentCacheModel.shippingDate = Long.MIN_VALUE;
		}

		Date expectedDate = getExpectedDate();

		if (expectedDate != null) {
			commerceShipmentCacheModel.expectedDate = expectedDate.getTime();
		}
		else {
			commerceShipmentCacheModel.expectedDate = Long.MIN_VALUE;
		}

		commerceShipmentCacheModel.status = getStatus();

		return commerceShipmentCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceShipment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommerceShipment, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceShipment, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((CommerceShipment)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceShipment, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommerceShipment, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceShipment, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((CommerceShipment)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CommerceShipment>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _commerceShipmentId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _commerceAccountId;
	private String _shippingName;
	private String _shippingDescription;
	private String _shippingStreet1;
	private String _shippingStreet2;
	private String _shippingStreet3;
	private String _shippingCity;
	private String _shippingZip;
	private long _shippingRegionId;
	private long _shippingCountryId;
	private String _shippingPhoneNumber;
	private long _commerceShippingMethodId;
	private String _shippingOptionName;
	private String _carrier;
	private String _trackingNumber;
	private Date _shippingDate;
	private Date _expectedDate;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private CommerceShipment _escapedModel;

}
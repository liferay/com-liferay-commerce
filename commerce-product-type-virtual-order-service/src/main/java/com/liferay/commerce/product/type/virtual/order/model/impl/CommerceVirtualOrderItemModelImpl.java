/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.product.type.virtual.order.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem;
import com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItemModel;
import com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItemSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CommerceVirtualOrderItem service. Represents a row in the &quot;CommerceVirtualOrderItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CommerceVirtualOrderItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceVirtualOrderItemImpl}.
 * </p>
 *
 * @author Alessio Antonio Rendina
 * @see CommerceVirtualOrderItemImpl
 * @see CommerceVirtualOrderItem
 * @see CommerceVirtualOrderItemModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CommerceVirtualOrderItemModelImpl extends BaseModelImpl<CommerceVirtualOrderItem>
	implements CommerceVirtualOrderItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce virtual order item model instance should use the {@link CommerceVirtualOrderItem} interface instead.
	 */
	public static final String TABLE_NAME = "CommerceVirtualOrderItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "commerceVirtualOrderItemId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "commerceOrderItemId", Types.BIGINT },
			{ "fileEntryId", Types.BIGINT },
			{ "url", Types.VARCHAR },
			{ "activationStatus", Types.INTEGER },
			{ "duration", Types.BIGINT },
			{ "usages", Types.INTEGER },
			{ "maxUsages", Types.INTEGER },
			{ "active_", Types.BOOLEAN },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commerceVirtualOrderItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("commerceOrderItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("activationStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("duration", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("usages", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("maxUsages", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("active_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("startDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table CommerceVirtualOrderItem (uuid_ VARCHAR(75) null,commerceVirtualOrderItemId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,commerceOrderItemId LONG,fileEntryId LONG,url VARCHAR(75) null,activationStatus INTEGER,duration LONG,usages INTEGER,maxUsages INTEGER,active_ BOOLEAN,startDate DATE null,endDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table CommerceVirtualOrderItem";
	public static final String ORDER_BY_JPQL = " ORDER BY commerceVirtualOrderItem.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CommerceVirtualOrderItem.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.type.virtual.order.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.type.virtual.order.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.product.type.virtual.order.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem"),
			true);
	public static final long COMMERCEORDERITEMID_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceVirtualOrderItem toModel(
		CommerceVirtualOrderItemSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CommerceVirtualOrderItem model = new CommerceVirtualOrderItemImpl();

		model.setUuid(soapModel.getUuid());
		model.setCommerceVirtualOrderItemId(soapModel.getCommerceVirtualOrderItemId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCommerceOrderItemId(soapModel.getCommerceOrderItemId());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setUrl(soapModel.getUrl());
		model.setActivationStatus(soapModel.getActivationStatus());
		model.setDuration(soapModel.getDuration());
		model.setUsages(soapModel.getUsages());
		model.setMaxUsages(soapModel.getMaxUsages());
		model.setActive(soapModel.isActive());
		model.setStartDate(soapModel.getStartDate());
		model.setEndDate(soapModel.getEndDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceVirtualOrderItem> toModels(
		CommerceVirtualOrderItemSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CommerceVirtualOrderItem> models = new ArrayList<CommerceVirtualOrderItem>(soapModels.length);

		for (CommerceVirtualOrderItemSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.commerce.product.type.virtual.order.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem"));

	public CommerceVirtualOrderItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceVirtualOrderItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceVirtualOrderItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceVirtualOrderItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceVirtualOrderItem.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceVirtualOrderItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("commerceVirtualOrderItemId",
			getCommerceVirtualOrderItemId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("commerceOrderItemId", getCommerceOrderItemId());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("url", getUrl());
		attributes.put("activationStatus", getActivationStatus());
		attributes.put("duration", getDuration());
		attributes.put("usages", getUsages());
		attributes.put("maxUsages", getMaxUsages());
		attributes.put("active", isActive());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long commerceVirtualOrderItemId = (Long)attributes.get(
				"commerceVirtualOrderItemId");

		if (commerceVirtualOrderItemId != null) {
			setCommerceVirtualOrderItemId(commerceVirtualOrderItemId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long commerceOrderItemId = (Long)attributes.get("commerceOrderItemId");

		if (commerceOrderItemId != null) {
			setCommerceOrderItemId(commerceOrderItemId);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		String url = (String)attributes.get("url");

		if (url != null) {
			setUrl(url);
		}

		Integer activationStatus = (Integer)attributes.get("activationStatus");

		if (activationStatus != null) {
			setActivationStatus(activationStatus);
		}

		Long duration = (Long)attributes.get("duration");

		if (duration != null) {
			setDuration(duration);
		}

		Integer usages = (Integer)attributes.get("usages");

		if (usages != null) {
			setUsages(usages);
		}

		Integer maxUsages = (Integer)attributes.get("maxUsages");

		if (maxUsages != null) {
			setMaxUsages(maxUsages);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getCommerceVirtualOrderItemId() {
		return _commerceVirtualOrderItemId;
	}

	@Override
	public void setCommerceVirtualOrderItemId(long commerceVirtualOrderItemId) {
		_commerceVirtualOrderItemId = commerceVirtualOrderItemId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCommerceOrderItemId() {
		return _commerceOrderItemId;
	}

	@Override
	public void setCommerceOrderItemId(long commerceOrderItemId) {
		_columnBitmask |= COMMERCEORDERITEMID_COLUMN_BITMASK;

		if (!_setOriginalCommerceOrderItemId) {
			_setOriginalCommerceOrderItemId = true;

			_originalCommerceOrderItemId = _commerceOrderItemId;
		}

		_commerceOrderItemId = commerceOrderItemId;
	}

	public long getOriginalCommerceOrderItemId() {
		return _originalCommerceOrderItemId;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@JSON
	@Override
	public String getUrl() {
		if (_url == null) {
			return "";
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		_url = url;
	}

	@JSON
	@Override
	public int getActivationStatus() {
		return _activationStatus;
	}

	@Override
	public void setActivationStatus(int activationStatus) {
		_activationStatus = activationStatus;
	}

	@JSON
	@Override
	public long getDuration() {
		return _duration;
	}

	@Override
	public void setDuration(long duration) {
		_duration = duration;
	}

	@JSON
	@Override
	public int getUsages() {
		return _usages;
	}

	@Override
	public void setUsages(int usages) {
		_usages = usages;
	}

	@JSON
	@Override
	public int getMaxUsages() {
		return _maxUsages;
	}

	@Override
	public void setMaxUsages(int maxUsages) {
		_maxUsages = maxUsages;
	}

	@JSON
	@Override
	public boolean getActive() {
		return _active;
	}

	@JSON
	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_active = active;
	}

	@JSON
	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@JSON
	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				CommerceVirtualOrderItem.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CommerceVirtualOrderItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceVirtualOrderItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CommerceVirtualOrderItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceVirtualOrderItemImpl commerceVirtualOrderItemImpl = new CommerceVirtualOrderItemImpl();

		commerceVirtualOrderItemImpl.setUuid(getUuid());
		commerceVirtualOrderItemImpl.setCommerceVirtualOrderItemId(getCommerceVirtualOrderItemId());
		commerceVirtualOrderItemImpl.setGroupId(getGroupId());
		commerceVirtualOrderItemImpl.setCompanyId(getCompanyId());
		commerceVirtualOrderItemImpl.setUserId(getUserId());
		commerceVirtualOrderItemImpl.setUserName(getUserName());
		commerceVirtualOrderItemImpl.setCreateDate(getCreateDate());
		commerceVirtualOrderItemImpl.setModifiedDate(getModifiedDate());
		commerceVirtualOrderItemImpl.setCommerceOrderItemId(getCommerceOrderItemId());
		commerceVirtualOrderItemImpl.setFileEntryId(getFileEntryId());
		commerceVirtualOrderItemImpl.setUrl(getUrl());
		commerceVirtualOrderItemImpl.setActivationStatus(getActivationStatus());
		commerceVirtualOrderItemImpl.setDuration(getDuration());
		commerceVirtualOrderItemImpl.setUsages(getUsages());
		commerceVirtualOrderItemImpl.setMaxUsages(getMaxUsages());
		commerceVirtualOrderItemImpl.setActive(isActive());
		commerceVirtualOrderItemImpl.setStartDate(getStartDate());
		commerceVirtualOrderItemImpl.setEndDate(getEndDate());

		commerceVirtualOrderItemImpl.resetOriginalValues();

		return commerceVirtualOrderItemImpl;
	}

	@Override
	public int compareTo(CommerceVirtualOrderItem commerceVirtualOrderItem) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				commerceVirtualOrderItem.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceVirtualOrderItem)) {
			return false;
		}

		CommerceVirtualOrderItem commerceVirtualOrderItem = (CommerceVirtualOrderItem)obj;

		long primaryKey = commerceVirtualOrderItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceVirtualOrderItemModelImpl commerceVirtualOrderItemModelImpl = this;

		commerceVirtualOrderItemModelImpl._originalUuid = commerceVirtualOrderItemModelImpl._uuid;

		commerceVirtualOrderItemModelImpl._originalGroupId = commerceVirtualOrderItemModelImpl._groupId;

		commerceVirtualOrderItemModelImpl._setOriginalGroupId = false;

		commerceVirtualOrderItemModelImpl._originalCompanyId = commerceVirtualOrderItemModelImpl._companyId;

		commerceVirtualOrderItemModelImpl._setOriginalCompanyId = false;

		commerceVirtualOrderItemModelImpl._setModifiedDate = false;

		commerceVirtualOrderItemModelImpl._originalCommerceOrderItemId = commerceVirtualOrderItemModelImpl._commerceOrderItemId;

		commerceVirtualOrderItemModelImpl._setOriginalCommerceOrderItemId = false;

		commerceVirtualOrderItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceVirtualOrderItem> toCacheModel() {
		CommerceVirtualOrderItemCacheModel commerceVirtualOrderItemCacheModel = new CommerceVirtualOrderItemCacheModel();

		commerceVirtualOrderItemCacheModel.uuid = getUuid();

		String uuid = commerceVirtualOrderItemCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			commerceVirtualOrderItemCacheModel.uuid = null;
		}

		commerceVirtualOrderItemCacheModel.commerceVirtualOrderItemId = getCommerceVirtualOrderItemId();

		commerceVirtualOrderItemCacheModel.groupId = getGroupId();

		commerceVirtualOrderItemCacheModel.companyId = getCompanyId();

		commerceVirtualOrderItemCacheModel.userId = getUserId();

		commerceVirtualOrderItemCacheModel.userName = getUserName();

		String userName = commerceVirtualOrderItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceVirtualOrderItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceVirtualOrderItemCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceVirtualOrderItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceVirtualOrderItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			commerceVirtualOrderItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceVirtualOrderItemCacheModel.commerceOrderItemId = getCommerceOrderItemId();

		commerceVirtualOrderItemCacheModel.fileEntryId = getFileEntryId();

		commerceVirtualOrderItemCacheModel.url = getUrl();

		String url = commerceVirtualOrderItemCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			commerceVirtualOrderItemCacheModel.url = null;
		}

		commerceVirtualOrderItemCacheModel.activationStatus = getActivationStatus();

		commerceVirtualOrderItemCacheModel.duration = getDuration();

		commerceVirtualOrderItemCacheModel.usages = getUsages();

		commerceVirtualOrderItemCacheModel.maxUsages = getMaxUsages();

		commerceVirtualOrderItemCacheModel.active = isActive();

		Date startDate = getStartDate();

		if (startDate != null) {
			commerceVirtualOrderItemCacheModel.startDate = startDate.getTime();
		}
		else {
			commerceVirtualOrderItemCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			commerceVirtualOrderItemCacheModel.endDate = endDate.getTime();
		}
		else {
			commerceVirtualOrderItemCacheModel.endDate = Long.MIN_VALUE;
		}

		return commerceVirtualOrderItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", commerceVirtualOrderItemId=");
		sb.append(getCommerceVirtualOrderItemId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", commerceOrderItemId=");
		sb.append(getCommerceOrderItemId());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", url=");
		sb.append(getUrl());
		sb.append(", activationStatus=");
		sb.append(getActivationStatus());
		sb.append(", duration=");
		sb.append(getDuration());
		sb.append(", usages=");
		sb.append(getUsages());
		sb.append(", maxUsages=");
		sb.append(getMaxUsages());
		sb.append(", active=");
		sb.append(isActive());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.commerce.product.type.virtual.order.model.CommerceVirtualOrderItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceVirtualOrderItemId</column-name><column-value><![CDATA[");
		sb.append(getCommerceVirtualOrderItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceOrderItemId</column-name><column-value><![CDATA[");
		sb.append(getCommerceOrderItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>url</column-name><column-value><![CDATA[");
		sb.append(getUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activationStatus</column-name><column-value><![CDATA[");
		sb.append(getActivationStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duration</column-name><column-value><![CDATA[");
		sb.append(getDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usages</column-name><column-value><![CDATA[");
		sb.append(getUsages());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maxUsages</column-name><column-value><![CDATA[");
		sb.append(getMaxUsages());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(isActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CommerceVirtualOrderItem.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CommerceVirtualOrderItem.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _commerceVirtualOrderItemId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _commerceOrderItemId;
	private long _originalCommerceOrderItemId;
	private boolean _setOriginalCommerceOrderItemId;
	private long _fileEntryId;
	private String _url;
	private int _activationStatus;
	private long _duration;
	private int _usages;
	private int _maxUsages;
	private boolean _active;
	private Date _startDate;
	private Date _endDate;
	private long _columnBitmask;
	private CommerceVirtualOrderItem _escapedModel;
}
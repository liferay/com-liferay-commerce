{namespace Price}

{template .render}
	{@param price: ?}
	{@param? additionalDiscountedClasses: string}
	{@param? additionalOldPriceClasses: string}
	{@param? additionalPriceClasses: string}

	{if isNonnull($price.formattedPromoPrice)}
		{call .promoContent}
			{param price: $price /}
			{param additionalDiscountedClasses: $additionalDiscountedClasses /}
			{param additionalOldPriceClasses: $additionalOldPriceClasses /}
		{/call}
	{else}
		{call .content}
			{param price: $price /}
			{param additionalPriceClasses: $additionalPriceClasses /}
		{/call}
	{/if}

{/template}

{template .promoContent}
	{@param price: [
		formattedPromoPrice: string,
		formattedPrice: string
	]}
	{@param? additionalDiscountedClasses: string}
	{@param? additionalOldPriceClasses: string}

	<span class="price price--discounted{$additionalDiscountedClasses}">
		{$price.formattedPromoPrice}
	</span>
	<span class="price price--old{$additionalOldPriceClasses}">
		{$price.formattedPrice}
	</span>

{/template}

{template .content}
	{@param price: [
		formattedPrice: string
	]}
	{@param? additionalPriceClasses: string}

	<span class="price{$additionalPriceClasses}">
		{$price.formattedPrice}
	</span>
{/template}
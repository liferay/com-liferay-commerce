{namespace AddOrganizationsModal}

{template .render}

	{@param? organizations: list<[
		id: string | number,
		name: string,
		colorId: number
	]>}

	{@param? selectedOrganizations: list<[
		id: string | number,
		name: string,
		colorId: number
	]>}

	{@param? query: string }
	{@param spritemap: string }

	{@param? _isVisible: bool }
	{@param? _toggleItem: any }
	{@param? _handleInputBox: any }
	{@param? _handleFormSubmit: any }
	{@param? _handleCloseModal: any }
	{@param? _addOrganizations: any }

	{let $formattedQuery kind="text"}
		{nil}
		{if isNonnull($query)}
			{$query}
		{/if}
	{/let}

	{let $body kind="html"}
		<div class="commerce-modal">
			<div class="commerce-modal__header">
				<h3 class="commerce-modal__title">
					{msg desc="Add Organization to this account"}add-organization-to-this-account{/msg}
				</h3>

				<button
					class="commerce-modal__close"
					data-onclick="{$_handleCloseModal}"
				>
					{call ClayIcon.render}
						{param spritemap: $spritemap /}
						{param symbol: 'close' /}
					{/call}
				</button>
			</div>

			<div class="commerce-modal__content">

				<label class="commerce-modal__label">
					{msg desc="Organization name"}organization-name{/msg}
				</label>

				<div class="user-invitation">
					<div class="autocomplete-input user-invitation__input">
						<div class="autocomplete-input__icon">
							{call ClayIcon.render}
								{param spritemap: $spritemap /}
								{param symbol: 'search' /}
							{/call}
						</div>

						<div class="autocomplete-input__wrapper">
							<div class="autocomplete-input__content">
								{if isNonnull($selectedOrganizations)}
									{foreach $addedOrganization in $selectedOrganizations}
										{call OrganizationInputItem.render}
											{param events: ['removeItem' : $_toggleItem] /}
											{param id: $addedOrganization.id /}
											{param name: $addedOrganization.name /}
											{param spritemap: $spritemap /}
										{/call}
									{/foreach}
								{/if}
								<form data-onsubmit="{$_handleFormSubmit}" ref="form">
									<input
										class="autocomplete-input__box"
										type="text"
										value="{$formattedQuery}"
										data-onkeyup="{$_handleInputBox}"
									/>
								</form>
							</div>
						</div>
					</div>

					<div class="user-invitation__list">
						{if isNonnull($organizations) and length($organizations) > 0 }
							{foreach $organization in $organizations}
								{call OrganizationListItem.render}
									{param events: ['toggleItem': $_toggleItem] /}
									{param id: $organization.id /}
									{param name: $organization.name /}
									{param colorId: $organization.colorId /}
									{param selectedOrganizations: $selectedOrganizations /}
									{param query: $formattedQuery /}
								{/call}
							{/foreach}
						{/if}
						{if isNonnull($organizations) and length($organizations) == 0 }
							<div class="no-element-found">
								{msg desc="No elements found"}no-elements-found{/msg}
							</div>
						{/if}
					</div>
				</div>
			</div>

			{let $inviteButtonClasses kind="text"}
				minium-button minium-button--big
				{if isNonnull($selectedOrganizations) and length($selectedOrganizations) == 0}
					{sp}minium-button--disabled
				{/if}
			{/let}
			<div class="commerce-modal__actions">
				<button
					class="{$inviteButtonClasses}"
					data-onclick="{$_addOrganizations}"
				>
					{msg desc="Add organization"}add-organization{/msg}
				</button>
			</div>
		</div>
	{/let}

	<div class="commerce-modal-wrapper">
		{call ClayModal.render}
			{param body: $body /}
			{param visible: $_isVisible /}
			{param events: ['hide': $_handleCloseModal] /}
		{/call}
	</div>

{/template}
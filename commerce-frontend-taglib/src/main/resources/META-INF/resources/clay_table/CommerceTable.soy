{namespace CommerceTable}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param _handlePageClicked: any}
	{@param _handleItemToggled: any}
	{@param _handleItemsPerPageClicked: any}
	{@param currentPage: int}
	{@param? id: string}
	{@param items: ?}
	{@param? paginationBaseHref: string}
	{@param paginationEntries: ?}
	{@param paginationSelectedEntry: int}
	{@param schema: ?}
	{@param spritemap: string}
	{@param? selectable: bool}
	{@param showActionsMenu: bool}
	{@param totalItems: int}
	{@param? tableVariant: string}
	{@param? actionsMenuVariant: string}
	{@param? emptyTableMessage: string}
	{@param? showPagination: bool}

	<div class="commerce-table-wrapper mb-4">
		{if length($items) == 0}
			<h4 class="commerce-empty-table-message mb-0 text-center">
				{if $emptyTableMessage}
					{$emptyTableMessage}
				{else}
					{msg desc=""}there-are-no-results{/msg}
				{/if}
			</h4>
		{else}
			{delcall CommerceTable.Table variant="$tableVariant"}
				{param _handleItemToggled: $_handleItemToggled /}
				{param id: $id + 'Table' /}
				{param items: $items /}
				{param schema: $schema /}
				{param selectable: $selectable /}
				{param showActionsMenu : $showActionsMenu /}
				{param spritemap: $spritemap /}
				{param actionsMenuVariant: $actionsMenuVariant /}
			{/delcall}

			{if $showPagination}
				{call ClayPaginationBar.render}
					{param events: ['itemsPerPageClicked': $_handleItemsPerPageClicked, 'pageClicked': $_handlePageClicked ] /}
					{param currentPage: $currentPage /}
					{param selectedEntry: $paginationSelectedEntry /}
					{param entries: $paginationEntries /}
					{param spritemap: $spritemap /}
					{param totalEntries: $totalItems /}
					{param baseHref: $paginationBaseHref /}
					{param id: $id + 'Pagination' /}
				{/call}
			{/if}
		{/if}
	</div>
{/template}

/**
 * This renders the default variant of the table
 */
{deltemplate CommerceTable.Table}
	{@param _handleItemToggled: any}
	{@param? id: string}
	{@param spritemap: string}
	{@param items: ?}
	{@param schema: ?}
	{@param? selectable: bool}
	{@param showActionsMenu: bool}
	{@param? actionsMenuVariant: string}

	{call ClayTable.render}
		{param events: ['itemToggled': $_handleItemToggled ] /}
		{param id: $id /}
		{param items: $items /}
		{param schema: $schema /}
		{param selectable: $selectable /}
		{param showActionsMenu : $showActionsMenu /}
		{param spritemap: $spritemap /}
		{param actionsMenuVariant: $actionsMenuVariant /}
	{/call}

{/deltemplate}

{deltemplate ClayTable.Cell variant="'commerceTableCellImage'"}
	{@param fieldSchema: ?}
	{@param item: ?}
	{@param value: ?}
	{@param? _handleCellContentClick: any}
	{@param? spritemap: string}

	<td class="{$fieldSchema.cssClass}">
		<img src={$value} />
	</td>
{/deltemplate}

{deltemplate ClayTable.Cell variant="'commerceTableCellImageName'"}
	{@param fieldSchema: ?}
	{@param item: ?}
	{@param value: ?}
	{@param? _handleCellContentClick: any}
	{@param? spritemap: string}

	{let $label kind="html"}
		<div class="row">
			{if $item.thumbnail}
				<div class="col-auto">
					<span class="image-name-cell__image-container">
						<img class="image-name-cell__image" src={$item.thumbnail} alt={$value} />
					</span>
				</div>
			{/if}
			<div class="align-items-center col col d-flex">
				<span class="image-name-cell__value">
					{$value}
				</span>
			</div>
		</div>
	{/let}

	<td class="image-name-cell">
		{if $item.href}
			{call ClayLink.render}
				{param elementClasses: 'text-truncate' /}
				{param href: $item.href /}
				{param label: $label /}
			{/call}
		{else}
			{$label}
		{/if}
	</td>
{/deltemplate}

{deltemplate ClayTable.Cell variant="'commerceTablePrice'"}
	{@param fieldSchema: ?}
	{@param item: ?}
	{@param value: ?}
	{@param? _handleCellContentClick: any}
	{@param? spritemap: string}

	<td>
		{if isNonnull($item.promoPrice)}
			<span class="price">
				<span class="price__value price__value--promo-price">
					{$item.promoPrice}
				</span>
				<span class="price__value price__value--inactive">
					{$value}
				</span>
			</span>
		{else}
			<span class="price">
				<span class="price__value">
					{$value}
				</span>
			</span>
		{/if}
	</td>
{/deltemplate}
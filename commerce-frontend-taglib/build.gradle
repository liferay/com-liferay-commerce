
import java.io.File;

apply plugin: "com.liferay.lang.merger"

dependencies {
	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.frontend.js.loader.modules.extender.api", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.frontend.taglib.soy", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.osgi.service.tracker.collections", version: "3.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.lang", version: "2.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.petra.string", version: "2.0.0"
	compileOnly group: "com.liferay.commerce", name: "com.liferay.commerce.account.api", version: "2.0.0"
	compileOnly group: "com.liferay.commerce", name: "com.liferay.commerce.api", version: "6.0.0"
	compileOnly group: "com.liferay.commerce", name: "com.liferay.commerce.currency.api", version: "1.0.0"
	compileOnly group: "com.liferay.commerce", name: "com.liferay.commerce.frontend.api", version: "1.1.0"
	compileOnly group: "com.liferay.commerce", name: "com.liferay.commerce.product.api", version: "5.0.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "3.3.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "3.5.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "3.0.0"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "3.0.0"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compileOnly group: "javax.servlet.jsp", name: "javax.servlet.jsp-api", version: "2.3.1"
	compileOnly group: "org.osgi", name: "org.osgi.core", version: "6.0.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
    compile group: "com.google.template", name: "soy", version: "2015-04-10"
}

task testSoy << {
	def soyFiles = fileTree(
		dir: "..",
		include: ["../../../../node_modules/clay-*/**/*.soy","**/*.soy"],
		excludes: ["**/__tests__/**/*"]
	).files;

	def suite = new SoyTestSuite(soyFiles);

	def results = suite.run();

	def failed = 0;

	results.forEach {result ->
		if (result.passed) {
			println "âœ… " + result.namespace;
		}
		else {
			failed++;

			if (result.error) {
				println "ðŸ’¥ " + result.namespace +
					" [" + result.error.message + "]";
			}
			else {
				println "ðŸ‘Ž " + result.namespace +
					" [Unexpected output: ${result.output}]";
			}
		}
	};

	if (failed > 0) {
		throw new GradleException(
			"${failed}Â soy tests failed ðŸ˜¢ (see previous output for more info)");
	}
}

task regenerateFixturesExpected << {
	def soyFiles = fileTree(
		dir: "..",
		include: "clay-*/**/*.soy",
		excludes: ["**/__tests__/**/*", "clay-isomorphic/**/*"]
	).files;

	def suite = new SoyTestSuite(soyFiles);

	def results = suite.run();

	results.forEach {result ->
		result.test.regenerateFixturesExpected();
	};
}

task createMissingFixtures << {
	def soyFiles = fileTree(
		dir: "..",
		include: "clay-*/**/*.soy",
		excludes: ["**/__tests__/**/*", "clay-isomorphic/**/*"]
	).files;

	def suite = new SoyTestSuite(soyFiles);

	def results = suite.run();

	results.forEach {result ->
		if (result.error) {
			result.test.createFixtureFilesIfMissing();
		}
	};
}

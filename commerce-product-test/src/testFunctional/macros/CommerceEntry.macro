definition {

	macro addFullDescriptionViaAlloyEditor {
		AlloyEditor.typeEditor(
			content = "${entryFullDescription}",
			editor = "description");
	}

	macro addNewAccountGroupsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");
	}

	macro addNewAccountsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Select(
			locator1 = "Select#TYPE",
			value1 = "${criteriaType}");

		Button.clickSave();

		CommerceEntry.gotoNestedMenu(nestedMenu = "Users");

		Click(locator1 = "Button#PLUS");

		CommerceItemSelector.selectEntry(entryName = "${user}");

		AssertClick(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");
	}

	macro addNewAvailabilityEstimatesEntry {
		Type(
			locator1 = "CommerceEntry#TITLE_FIELD",
			value1 = "${entryName}");
	}

	macro addNewCatalogsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");
	}

	macro addNewChannelEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Select(
			locator1 = "Select#TYPE",
			value1 = "${criteriaType}");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select Site");

		var key_siteName = "${siteName}";

		IFrame.selectModalFrame();

		Click(
			key_siteName = "${siteName}",
			locator1 = "CommerceNavigation#CHOOSE_SITE_BUTTON");

		SelectFrameTop(value1 = "relative=top");

		Pause(locator1 = "5000");
	}

	macro addNewCountriesEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#BILLING_ALLOWED_CHECKBOX");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#SHIPPING_ALLOWED_CHECKBOX");

		Type(
			locator1 = "CommerceEntry#TWO_LETTERS_ISO_CODE_FIELD",
			value1 = "NC");

		Type(
			locator1 = "CommerceEntry#THREE_LETTERS_ISO_CODE_FIELD",
			value1 = "NCO");

		Type(
			locator1 = "CommerceEntry#NUMERIC_ISO_CODE_FIELD",
			value1 = "001");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#SUBJECT_TO_VAT_CHECKBOX");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
	}

	macro addNewCurrenciesEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Type(
			locator1 = "CommerceEntry#CODE_FIELD",
			value1 = "${code}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#PRIMARY_CHECKBOX");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
	}

	macro addNewDimensionUnit {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Type(
			locator1 = "CommerceEntry#KEY_FIELD",
			value1 = "${entryName}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#PRIMARY_CHECKBOX");
	}

	macro addNewDiscountsEntry {
		Type(
			locator1 = "CommerceEntry#TITLE_FIELD",
			value1 = "${entryTitle}");

		Select(
			locator1 = "CommerceEntry#DISCOUNT_TARGET_SELECT",
			value1 = "${discountTarget}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#CHANNEL_CHECKBOX");

		AssertClick(
			locator1 = "Button#SELECT",
			value1 = "Select");

		CommerceItemSelector.selectEntry(entryName = "${accountGroup}");

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");

		Type(
			locator1 = "CommerceEntry#MAXIMUM_DISCOUNT_AMOUNT_FIELD",
			value1 = "${maximumDiscountAmount}");

		Type(
			locator1 = "CommerceEntry#DISCOUNT_LEVEL_1_FIELD",
			value1 = "${discountLevel}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
	}

	macro addNewNotificationTemplate {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Type(
			locator1 = "TextArea#DESCRIPTION",
			value1 = "${entryName} Description");

		Click(locator1 = "Button#SELECT");

		CommerceItemSelector.selectEntry(entryName = "${accountGroup}");

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");

		Type(
			locator1 = "CommerceEntry#NOTIFICATION_TEMPLATE_FROM_ADDRESS_FIELD",
			value1 = "${fromAddress}");

		Type(
			locator1 = "CommerceEntry#NOTIFICATION_TEMPLATE_FROM_NAME_FIELD",
			value1 = "${fromName}");

		Select(
			locator1 = "Select#TYPE",
			value1 = "${notificationType}");
	}

	macro addNewPriceListsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Select(
			locator1 = "CommerceEntry#CURRENCY_SELECT",
			value1 = "${currencyCode}");

		Click(locator1 = "CommerceEntry#ACCOUNT_GROUPS_RELS_SELECT");

		CommerceItemSelector.selectEntry(entryName = "${accountGroupsEntryName}");

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");
	}

	macro addNewRegionsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Type(
			locator1 = "CommerceEntry#CODE_FIELD",
			value1 = "${code}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#ACTIVE_CHECKBOX");
	}

	macro addNewWeightUnit {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${entryName}");

		Type(
			locator1 = "CommerceEntry#KEY_FIELD",
			value1 = "${entryName}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#PRIMARY_CHECKBOX");
	}

	macro addOptionsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${optionName}");

		Type(
			locator1 = "CommerceEntry#DESCRIPTION_FIELD",
			value1 = "${optionDescription}");

		Select(
			locator1 = "CommerceEntry#FIELD_TYPE_SELECT",
			value1 = "${optionFieldType}");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#FACETABLE_CHECKBOX");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#REQUIRED_CHECKBOX");

		Check.checkToggleSwitch(locator1 = "CommerceEntry#SKU_CONTRIBUTOR_CHECKBOX");
	}

	macro addOptionValue {
		Type(
			locator1 = "CommerceEntry#MODAL_NAME_FIELD",
			value1 = "${valueName}");

		Type(
			locator1 = "CommerceEntry#PRIORITY_FIELD",
			value1 = "${valuePriority}");
	}

	macro addPricingEntry {
		Type(
			locator1 = "CommerceEntry#PRICE_FIELD",
			value1 = "${price}");
	}

	macro addProductsEntry {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${productName}");

		Type(
			locator1 = "CommerceEntry#SHORT_DESCRIPTION_FIELD",
			value1 = "${productShortDescription}");

		CommerceEntry.addFullDescriptionViaAlloyEditor(entryFullDescription = "${productFullDescription}");
	}

	macro addSKUsEntry {
		Type(
			locator1 = "CommerceEntry#SKU_FIELD",
			value1 = "${productSKU}");

		CommerceEntry.selectAssociatedOptionsValue(optionValue = "${optionValue}");
	}

	macro createNewAccountGroup {
		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Accounts");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewAccountsEntry(
			criteriaType = "${accountCriteriaType}",
			entryName = "${accountsEntryName}",
			user = "${user}");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Account Groups");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewAccountGroupsEntry(entryName = "${accountGroupsEntryName}");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceEntry.gotoNestedMenu(nestedMenu = "Accounts");

		Click(locator1 = "Button#PLUS");

		CommerceItemSelector.selectEntry(entryName = "${accountsEntryName}");

		Click(
			locator1 = "ItemSelector#ADD_BUTTON",
			value1 = "Add");
	}

	macro createNewCurrenciesEntry {
		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Settings");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Currencies");

		Click(locator1 = "Button#PLUS");

		CommerceEntry.addNewCurrenciesEntry(
			code = "${code}",
			entryName = "${entryName}");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

	macro editEntryFullDescription {
		CommerceEntry.addFullDescriptionViaAlloyEditor(entryFullDescription = "${newEntryFullDescription}");
	}

	macro editEntryName {
		Type(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${newEntryName}");
	}

	macro editEntryShortDescription {
		Type(
			locator1 = "CommerceEntry#SHORT_DESCRIPTION_FIELD",
			value1 = "${newEntryShortDescription}");
	}

	macro gotoBreadcrumb {
		Click(
			key_breadcrumb = "${breadcrumb}",
			locator1 = "CommerceEntry#BREADCRUMBS",
			value1 = "${breadcrumb}");
	}

	macro gotoMenuTab {
		AssertClick(
			key_menuTab = "${menuTab}",
			locator1 = "CommerceEntry#MENU_TAB",
			value1 = "${menuTab}");
	}

	macro gotoNestedMenu {
		AssertClick(
			key_nestedMenu = "${nestedMenu}",
			locator1 = "CommerceEntry#NESTED_MENU",
			value1 = "${nestedMenu}");
	}

	macro publishEntry {
		Button.clickPublish();

		if (IsElementPresent(locator1 = "Message#SUCCESS")) {
			AssertElementPresent(locator1 = "Message#SUCCESS");
		}
		else {
			AssertTextEquals(
				key_status = "${status}",
				locator1 = "CommerceEntry#WORKFLOW_STATUS",
				value1 = "${status}");
		}

		Pause(locator1 = "3000");
	}

	macro saveEntry {
		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		Pause(locator1 = "3000");
	}

	macro saveEntryAsDraft {
		Button.clickSaveAsDraft();

		if (IsElementPresent(locator1 = "Message#SUCCESS")) {
			AssertElementPresent(locator1 = "Message#SUCCESS");
		}
		else {
			AssertTextEquals(
				key_status = "${status}",
				locator1 = "CommerceEntry#WORKFLOW_STATUS",
				value1 = "${status}");
		}

		Pause(locator1 = "3000");
	}

	macro selectAssociatedOptionsValue {
		if (IsElementNotPresent(locator1 = "CommerceEntry#ACCORDION")) {
			Click(
				key_accordionTitle = "Options",
				locator1 = "CommerceEntry#ACCORDION_TITLE");
		}

		if (IsElementPresent(locator1 = "CommerceEntry#OPTION_SELECT")) {
			Click(locator1 = "CommerceEntry#OPTION_SELECT");

			Click(
				key_selectValue = "${optionValue}",
				locator1 = "CommerceEntry#OPTIONS_SELECT_LIST");
		}

		if (IsElementPresent(locator1 = "CommerceEntry#OPTION_VALUE", key_optionType = "checkbox_multiple", key_optionValue = "${optionValue}")) {
			Click(
				key_optionType = "checkbox_multiple",
				key_optionValue = "${optionValue}",
				locator1 = "CommerceEntry#OPTION_VALUE");
		}

		if (IsElementPresent(locator1 = "CommerceEntry#OPTION_VALUE", key_optionType = "radio", key_optionValue = "${optionValue}")) {
			Click(
				key_optionType = "radio",
				key_optionValue = "${optionValue}",
				locator1 = "CommerceEntry#OPTION_VALUE");
		}
	}

	macro uploadCatalogEntrySingleImage {
		AssertClick(
			locator1 = "CommerceEntry#PRODUCT_IMAGE_SELECT_FILE",
			value1 = "Select File");

		CommerceItemSelector.uploadSingleFile(uploadFileName = "${uploadFileName}");
	}

	macro viewCatalogEntry {
		AssertTextEquals(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${productName}");

		AssertTextEquals(
			locator1 = "CommerceEntry#SHORT_DESCRIPTION_FIELD",
			value1 = "${productShortDescription}");

		AssertTextEquals(
			locator1 = "CommerceEntry#FULL_DESCRIPTION_FIELD",
			value1 = "${productFullDescription}");

		AssertTextEquals(
			key_productName = "${productName}",
			locator1 = "CommerceEntry#SEO_FRIENDLYURL",
			value1 = "${productName}");
	}

	macro viewOptionsEntry {
		AssertTextEquals(
			locator1 = "CommerceEntry#NAME_FIELD",
			value1 = "${optionName}");

		AssertTextEquals(
			locator1 = "CommerceEntry#DESCRIPTION_FIELD",
			value1 = "${optionDescription}");
	}

}
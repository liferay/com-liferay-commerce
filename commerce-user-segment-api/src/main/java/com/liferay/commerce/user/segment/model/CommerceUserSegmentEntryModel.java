/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.user.segment.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the CommerceUserSegmentEntry service. Represents a row in the &quot;CommerceUserSegmentEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.commerce.user.segment.model.impl.CommerceUserSegmentEntryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.commerce.user.segment.model.impl.CommerceUserSegmentEntryImpl</code>.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceUserSegmentEntry
 * @generated
 */
@ProviderType
public interface CommerceUserSegmentEntryModel
	extends BaseModel<CommerceUserSegmentEntry>, GroupedModel, LocalizedModel,
			ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a commerce user segment entry model instance should use the {@link CommerceUserSegmentEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this commerce user segment entry.
	 *
	 * @return the primary key of this commerce user segment entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this commerce user segment entry.
	 *
	 * @param primaryKey the primary key of this commerce user segment entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the commerce user segment entry ID of this commerce user segment entry.
	 *
	 * @return the commerce user segment entry ID of this commerce user segment entry
	 */
	public long getCommerceUserSegmentEntryId();

	/**
	 * Sets the commerce user segment entry ID of this commerce user segment entry.
	 *
	 * @param commerceUserSegmentEntryId the commerce user segment entry ID of this commerce user segment entry
	 */
	public void setCommerceUserSegmentEntryId(long commerceUserSegmentEntryId);

	/**
	 * Returns the group ID of this commerce user segment entry.
	 *
	 * @return the group ID of this commerce user segment entry
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this commerce user segment entry.
	 *
	 * @param groupId the group ID of this commerce user segment entry
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this commerce user segment entry.
	 *
	 * @return the company ID of this commerce user segment entry
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this commerce user segment entry.
	 *
	 * @param companyId the company ID of this commerce user segment entry
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this commerce user segment entry.
	 *
	 * @return the user ID of this commerce user segment entry
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this commerce user segment entry.
	 *
	 * @param userId the user ID of this commerce user segment entry
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this commerce user segment entry.
	 *
	 * @return the user uuid of this commerce user segment entry
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this commerce user segment entry.
	 *
	 * @param userUuid the user uuid of this commerce user segment entry
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this commerce user segment entry.
	 *
	 * @return the user name of this commerce user segment entry
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this commerce user segment entry.
	 *
	 * @param userName the user name of this commerce user segment entry
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this commerce user segment entry.
	 *
	 * @return the create date of this commerce user segment entry
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this commerce user segment entry.
	 *
	 * @param createDate the create date of this commerce user segment entry
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this commerce user segment entry.
	 *
	 * @return the modified date of this commerce user segment entry
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this commerce user segment entry.
	 *
	 * @param modifiedDate the modified date of this commerce user segment entry
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this commerce user segment entry.
	 *
	 * @return the name of this commerce user segment entry
	 */
	public String getName();

	/**
	 * Returns the localized name of this commerce user segment entry in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized name of this commerce user segment entry
	 */
	@AutoEscape
	public String getName(Locale locale);

	/**
	 * Returns the localized name of this commerce user segment entry in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this commerce user segment entry. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getName(Locale locale, boolean useDefault);

	/**
	 * Returns the localized name of this commerce user segment entry in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized name of this commerce user segment entry
	 */
	@AutoEscape
	public String getName(String languageId);

	/**
	 * Returns the localized name of this commerce user segment entry in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized name of this commerce user segment entry
	 */
	@AutoEscape
	public String getName(String languageId, boolean useDefault);

	@AutoEscape
	public String getNameCurrentLanguageId();

	@AutoEscape
	public String getNameCurrentValue();

	/**
	 * Returns a map of the locales and localized names of this commerce user segment entry.
	 *
	 * @return the locales and localized names of this commerce user segment entry
	 */
	public Map<Locale, String> getNameMap();

	/**
	 * Sets the name of this commerce user segment entry.
	 *
	 * @param name the name of this commerce user segment entry
	 */
	public void setName(String name);

	/**
	 * Sets the localized name of this commerce user segment entry in the language.
	 *
	 * @param name the localized name of this commerce user segment entry
	 * @param locale the locale of the language
	 */
	public void setName(String name, Locale locale);

	/**
	 * Sets the localized name of this commerce user segment entry in the language, and sets the default locale.
	 *
	 * @param name the localized name of this commerce user segment entry
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setName(String name, Locale locale, Locale defaultLocale);

	public void setNameCurrentLanguageId(String languageId);

	/**
	 * Sets the localized names of this commerce user segment entry from the map of locales and localized names.
	 *
	 * @param nameMap the locales and localized names of this commerce user segment entry
	 */
	public void setNameMap(Map<Locale, String> nameMap);

	/**
	 * Sets the localized names of this commerce user segment entry from the map of locales and localized names, and sets the default locale.
	 *
	 * @param nameMap the locales and localized names of this commerce user segment entry
	 * @param defaultLocale the default locale
	 */
	public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale);

	/**
	 * Returns the key of this commerce user segment entry.
	 *
	 * @return the key of this commerce user segment entry
	 */
	@AutoEscape
	public String getKey();

	/**
	 * Sets the key of this commerce user segment entry.
	 *
	 * @param key the key of this commerce user segment entry
	 */
	public void setKey(String key);

	/**
	 * Returns the active of this commerce user segment entry.
	 *
	 * @return the active of this commerce user segment entry
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this commerce user segment entry is active.
	 *
	 * @return <code>true</code> if this commerce user segment entry is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this commerce user segment entry is active.
	 *
	 * @param active the active of this commerce user segment entry
	 */
	public void setActive(boolean active);

	/**
	 * Returns the system of this commerce user segment entry.
	 *
	 * @return the system of this commerce user segment entry
	 */
	public boolean getSystem();

	/**
	 * Returns <code>true</code> if this commerce user segment entry is system.
	 *
	 * @return <code>true</code> if this commerce user segment entry is system; <code>false</code> otherwise
	 */
	public boolean isSystem();

	/**
	 * Sets whether this commerce user segment entry is system.
	 *
	 * @param system the system of this commerce user segment entry
	 */
	public void setSystem(boolean system);

	/**
	 * Returns the priority of this commerce user segment entry.
	 *
	 * @return the priority of this commerce user segment entry
	 */
	public double getPriority();

	/**
	 * Sets the priority of this commerce user segment entry.
	 *
	 * @param priority the priority of this commerce user segment entry
	 */
	public void setPriority(double priority);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(CommerceUserSegmentEntry commerceUserSegmentEntry);

	@Override
	public int hashCode();

	@Override
	public CacheModel<CommerceUserSegmentEntry> toCacheModel();

	@Override
	public CommerceUserSegmentEntry toEscapedModel();

	@Override
	public CommerceUserSegmentEntry toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();

}
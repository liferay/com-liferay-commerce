/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.account.model.impl;

import com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRel;
import com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRelModel;
import com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRelSoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceAccountGroupCommerceAccountRel service. Represents a row in the &quot;CAccountGroupCAccountRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>CommerceAccountGroupCommerceAccountRelModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceAccountGroupCommerceAccountRelImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceAccountGroupCommerceAccountRelImpl
 * @generated
 */
@JSON(strict = true)
public class CommerceAccountGroupCommerceAccountRelModelImpl
	extends BaseModelImpl<CommerceAccountGroupCommerceAccountRel>
	implements CommerceAccountGroupCommerceAccountRelModel {

	/**
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce account group commerce account rel model instance should use the <code>CommerceAccountGroupCommerceAccountRel</code> interface instead.
	 */
	public static final String TABLE_NAME = "CAccountGroupCAccountRel";

	public static final Object[][] TABLE_COLUMNS = {
		{"externalReferenceCode", Types.VARCHAR},
		{"CAccountGroupCAccountRelId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP},
		{"commerceAccountGroupId", Types.BIGINT},
		{"commerceAccountId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("externalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CAccountGroupCAccountRelId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("commerceAccountGroupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceAccountId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CAccountGroupCAccountRel (externalReferenceCode VARCHAR(75) null,CAccountGroupCAccountRelId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,commerceAccountGroupId LONG,commerceAccountId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table CAccountGroupCAccountRel";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceAccountGroupCommerceAccountRel.commerceAccountGroupCommerceAccountRelId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CAccountGroupCAccountRel.CAccountGroupCAccountRelId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.account.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRel"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.account.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRel"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.account.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRel"),
		true);

	public static final long COMMERCEACCOUNTGROUPID_COLUMN_BITMASK = 1L;

	public static final long COMMERCEACCOUNTID_COLUMN_BITMASK = 2L;

	public static final long COMPANYID_COLUMN_BITMASK = 4L;

	public static final long EXTERNALREFERENCECODE_COLUMN_BITMASK = 8L;

	public static final long
		COMMERCEACCOUNTGROUPCOMMERCEACCOUNTRELID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceAccountGroupCommerceAccountRel toModel(
		CommerceAccountGroupCommerceAccountRelSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		CommerceAccountGroupCommerceAccountRel model =
			new CommerceAccountGroupCommerceAccountRelImpl();

		model.setExternalReferenceCode(soapModel.getExternalReferenceCode());
		model.setCommerceAccountGroupCommerceAccountRelId(
			soapModel.getCommerceAccountGroupCommerceAccountRelId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCommerceAccountGroupId(soapModel.getCommerceAccountGroupId());
		model.setCommerceAccountId(soapModel.getCommerceAccountId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceAccountGroupCommerceAccountRel> toModels(
		CommerceAccountGroupCommerceAccountRelSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommerceAccountGroupCommerceAccountRel> models =
			new ArrayList<CommerceAccountGroupCommerceAccountRel>(
				soapModels.length);

		for (CommerceAccountGroupCommerceAccountRelSoap soapModel :
				soapModels) {

			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.account.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.account.model.CommerceAccountGroupCommerceAccountRel"));

	public CommerceAccountGroupCommerceAccountRelModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceAccountGroupCommerceAccountRelId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceAccountGroupCommerceAccountRelId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceAccountGroupCommerceAccountRelId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceAccountGroupCommerceAccountRel.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceAccountGroupCommerceAccountRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry
				<String,
				 Function<CommerceAccountGroupCommerceAccountRel, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceAccountGroupCommerceAccountRel, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(CommerceAccountGroupCommerceAccountRel)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceAccountGroupCommerceAccountRel)this,
					entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map
		<String, BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>>
			getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function
		<InvocationHandler, CommerceAccountGroupCommerceAccountRel>
			_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CommerceAccountGroupCommerceAccountRel.class.getClassLoader(),
			CommerceAccountGroupCommerceAccountRel.class, ModelWrapper.class);

		try {
			Constructor<CommerceAccountGroupCommerceAccountRel> constructor =
				(Constructor<CommerceAccountGroupCommerceAccountRel>)
					proxyClass.getConstructor(InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException roe) {
					throw new InternalError(roe);
				}
			};
		}
		catch (NoSuchMethodException nsme) {
			throw new InternalError(nsme);
		}
	}

	private static final Map
		<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
			_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String,
					 Function
						 <CommerceAccountGroupCommerceAccountRel, Object>>();
		Map<String, BiConsumer<CommerceAccountGroupCommerceAccountRel, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String,
					 BiConsumer<CommerceAccountGroupCommerceAccountRel, ?>>();

		attributeGetterFunctions.put(
			"externalReferenceCode",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getExternalReferenceCode();
				}

			});
		attributeSetterBiConsumers.put(
			"externalReferenceCode",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object externalReferenceCode) {

					commerceAccountGroupCommerceAccountRel.
						setExternalReferenceCode((String)externalReferenceCode);
				}

			});
		attributeGetterFunctions.put(
			"commerceAccountGroupCommerceAccountRelId",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getCommerceAccountGroupCommerceAccountRelId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceAccountGroupCommerceAccountRelId",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object commerceAccountGroupCommerceAccountRelId) {

					commerceAccountGroupCommerceAccountRel.
						setCommerceAccountGroupCommerceAccountRelId(
							(Long)commerceAccountGroupCommerceAccountRelId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object companyId) {

					commerceAccountGroupCommerceAccountRel.setCompanyId(
						(Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object userId) {

					commerceAccountGroupCommerceAccountRel.setUserId(
						(Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object userName) {

					commerceAccountGroupCommerceAccountRel.setUserName(
						(String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object createDate) {

					commerceAccountGroupCommerceAccountRel.setCreateDate(
						(Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object modifiedDate) {

					commerceAccountGroupCommerceAccountRel.setModifiedDate(
						(Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"commerceAccountGroupId",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getCommerceAccountGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceAccountGroupId",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object commerceAccountGroupId) {

					commerceAccountGroupCommerceAccountRel.
						setCommerceAccountGroupId((Long)commerceAccountGroupId);
				}

			});
		attributeGetterFunctions.put(
			"commerceAccountId",
			new Function<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public Object apply(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel) {

					return commerceAccountGroupCommerceAccountRel.
						getCommerceAccountId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceAccountId",
			new BiConsumer<CommerceAccountGroupCommerceAccountRel, Object>() {

				@Override
				public void accept(
					CommerceAccountGroupCommerceAccountRel
						commerceAccountGroupCommerceAccountRel,
					Object commerceAccountId) {

					commerceAccountGroupCommerceAccountRel.setCommerceAccountId(
						(Long)commerceAccountId);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getExternalReferenceCode() {
		if (_externalReferenceCode == null) {
			return "";
		}
		else {
			return _externalReferenceCode;
		}
	}

	@Override
	public void setExternalReferenceCode(String externalReferenceCode) {
		_columnBitmask |= EXTERNALREFERENCECODE_COLUMN_BITMASK;

		if (_originalExternalReferenceCode == null) {
			_originalExternalReferenceCode = _externalReferenceCode;
		}

		_externalReferenceCode = externalReferenceCode;
	}

	public String getOriginalExternalReferenceCode() {
		return GetterUtil.getString(_originalExternalReferenceCode);
	}

	@JSON
	@Override
	public long getCommerceAccountGroupCommerceAccountRelId() {
		return _commerceAccountGroupCommerceAccountRelId;
	}

	@Override
	public void setCommerceAccountGroupCommerceAccountRelId(
		long commerceAccountGroupCommerceAccountRelId) {

		_commerceAccountGroupCommerceAccountRelId =
			commerceAccountGroupCommerceAccountRelId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCommerceAccountGroupId() {
		return _commerceAccountGroupId;
	}

	@Override
	public void setCommerceAccountGroupId(long commerceAccountGroupId) {
		_columnBitmask |= COMMERCEACCOUNTGROUPID_COLUMN_BITMASK;

		if (!_setOriginalCommerceAccountGroupId) {
			_setOriginalCommerceAccountGroupId = true;

			_originalCommerceAccountGroupId = _commerceAccountGroupId;
		}

		_commerceAccountGroupId = commerceAccountGroupId;
	}

	public long getOriginalCommerceAccountGroupId() {
		return _originalCommerceAccountGroupId;
	}

	@JSON
	@Override
	public long getCommerceAccountId() {
		return _commerceAccountId;
	}

	@Override
	public void setCommerceAccountId(long commerceAccountId) {
		_columnBitmask |= COMMERCEACCOUNTID_COLUMN_BITMASK;

		if (!_setOriginalCommerceAccountId) {
			_setOriginalCommerceAccountId = true;

			_originalCommerceAccountId = _commerceAccountId;
		}

		_commerceAccountId = commerceAccountId;
	}

	public long getOriginalCommerceAccountId() {
		return _originalCommerceAccountId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(),
			CommerceAccountGroupCommerceAccountRel.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceAccountGroupCommerceAccountRel toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommerceAccountGroupCommerceAccountRel>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceAccountGroupCommerceAccountRelImpl
			commerceAccountGroupCommerceAccountRelImpl =
				new CommerceAccountGroupCommerceAccountRelImpl();

		commerceAccountGroupCommerceAccountRelImpl.setExternalReferenceCode(
			getExternalReferenceCode());
		commerceAccountGroupCommerceAccountRelImpl.
			setCommerceAccountGroupCommerceAccountRelId(
				getCommerceAccountGroupCommerceAccountRelId());
		commerceAccountGroupCommerceAccountRelImpl.setCompanyId(getCompanyId());
		commerceAccountGroupCommerceAccountRelImpl.setUserId(getUserId());
		commerceAccountGroupCommerceAccountRelImpl.setUserName(getUserName());
		commerceAccountGroupCommerceAccountRelImpl.setCreateDate(
			getCreateDate());
		commerceAccountGroupCommerceAccountRelImpl.setModifiedDate(
			getModifiedDate());
		commerceAccountGroupCommerceAccountRelImpl.setCommerceAccountGroupId(
			getCommerceAccountGroupId());
		commerceAccountGroupCommerceAccountRelImpl.setCommerceAccountId(
			getCommerceAccountId());

		commerceAccountGroupCommerceAccountRelImpl.resetOriginalValues();

		return commerceAccountGroupCommerceAccountRelImpl;
	}

	@Override
	public int compareTo(
		CommerceAccountGroupCommerceAccountRel
			commerceAccountGroupCommerceAccountRel) {

		long primaryKey =
			commerceAccountGroupCommerceAccountRel.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceAccountGroupCommerceAccountRel)) {
			return false;
		}

		CommerceAccountGroupCommerceAccountRel
			commerceAccountGroupCommerceAccountRel =
				(CommerceAccountGroupCommerceAccountRel)obj;

		long primaryKey =
			commerceAccountGroupCommerceAccountRel.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceAccountGroupCommerceAccountRelModelImpl
			commerceAccountGroupCommerceAccountRelModelImpl = this;

		commerceAccountGroupCommerceAccountRelModelImpl.
			_originalExternalReferenceCode =
				commerceAccountGroupCommerceAccountRelModelImpl.
					_externalReferenceCode;

		commerceAccountGroupCommerceAccountRelModelImpl._originalCompanyId =
			commerceAccountGroupCommerceAccountRelModelImpl._companyId;

		commerceAccountGroupCommerceAccountRelModelImpl._setOriginalCompanyId =
			false;

		commerceAccountGroupCommerceAccountRelModelImpl._setModifiedDate =
			false;

		commerceAccountGroupCommerceAccountRelModelImpl.
			_originalCommerceAccountGroupId =
				commerceAccountGroupCommerceAccountRelModelImpl.
					_commerceAccountGroupId;

		commerceAccountGroupCommerceAccountRelModelImpl.
			_setOriginalCommerceAccountGroupId = false;

		commerceAccountGroupCommerceAccountRelModelImpl.
			_originalCommerceAccountId =
				commerceAccountGroupCommerceAccountRelModelImpl.
					_commerceAccountId;

		commerceAccountGroupCommerceAccountRelModelImpl.
			_setOriginalCommerceAccountId = false;

		commerceAccountGroupCommerceAccountRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceAccountGroupCommerceAccountRel> toCacheModel() {
		CommerceAccountGroupCommerceAccountRelCacheModel
			commerceAccountGroupCommerceAccountRelCacheModel =
				new CommerceAccountGroupCommerceAccountRelCacheModel();

		commerceAccountGroupCommerceAccountRelCacheModel.externalReferenceCode =
			getExternalReferenceCode();

		String externalReferenceCode =
			commerceAccountGroupCommerceAccountRelCacheModel.
				externalReferenceCode;

		if ((externalReferenceCode != null) &&
			(externalReferenceCode.length() == 0)) {

			commerceAccountGroupCommerceAccountRelCacheModel.
				externalReferenceCode = null;
		}

		commerceAccountGroupCommerceAccountRelCacheModel.
			commerceAccountGroupCommerceAccountRelId =
				getCommerceAccountGroupCommerceAccountRelId();

		commerceAccountGroupCommerceAccountRelCacheModel.companyId =
			getCompanyId();

		commerceAccountGroupCommerceAccountRelCacheModel.userId = getUserId();

		commerceAccountGroupCommerceAccountRelCacheModel.userName =
			getUserName();

		String userName =
			commerceAccountGroupCommerceAccountRelCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceAccountGroupCommerceAccountRelCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceAccountGroupCommerceAccountRelCacheModel.createDate =
				createDate.getTime();
		}
		else {
			commerceAccountGroupCommerceAccountRelCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceAccountGroupCommerceAccountRelCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commerceAccountGroupCommerceAccountRelCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		commerceAccountGroupCommerceAccountRelCacheModel.
			commerceAccountGroupId = getCommerceAccountGroupId();

		commerceAccountGroupCommerceAccountRelCacheModel.commerceAccountId =
			getCommerceAccountId();

		return commerceAccountGroupCommerceAccountRelCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry
				<String,
				 Function<CommerceAccountGroupCommerceAccountRel, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceAccountGroupCommerceAccountRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply(
					(CommerceAccountGroupCommerceAccountRel)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceAccountGroupCommerceAccountRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry
				<String,
				 Function<CommerceAccountGroupCommerceAccountRel, Object>>
					entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceAccountGroupCommerceAccountRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply(
					(CommerceAccountGroupCommerceAccountRel)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, CommerceAccountGroupCommerceAccountRel>
				_escapedModelProxyProviderFunction =
					_getProxyProviderFunction();

	}

	private String _externalReferenceCode;
	private String _originalExternalReferenceCode;
	private long _commerceAccountGroupCommerceAccountRelId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _commerceAccountGroupId;
	private long _originalCommerceAccountGroupId;
	private boolean _setOriginalCommerceAccountGroupId;
	private long _commerceAccountId;
	private long _originalCommerceAccountId;
	private boolean _setOriginalCommerceAccountId;
	private long _columnBitmask;
	private CommerceAccountGroupCommerceAccountRel _escapedModel;

}
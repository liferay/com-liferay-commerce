/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.discount.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRel;
import com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRelModel;
import com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRelSoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceDiscountUserSegmentRel service. Represents a row in the &quot;CommerceDiscountUserSegmentRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>CommerceDiscountUserSegmentRelModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceDiscountUserSegmentRelImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceDiscountUserSegmentRelImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CommerceDiscountUserSegmentRelModelImpl
	extends BaseModelImpl<CommerceDiscountUserSegmentRel>
	implements CommerceDiscountUserSegmentRelModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce discount user segment rel model instance should use the <code>CommerceDiscountUserSegmentRel</code> interface instead.
	 */
	public static final String TABLE_NAME = "CommerceDiscountUserSegmentRel";

	public static final Object[][] TABLE_COLUMNS = {
		{"CDiscountUserSegmentRelId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"commerceDiscountId", Types.BIGINT},
		{"commerceUserSegmentEntryId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CDiscountUserSegmentRelId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("commerceDiscountId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceUserSegmentEntryId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CommerceDiscountUserSegmentRel (CDiscountUserSegmentRelId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,commerceDiscountId LONG,commerceUserSegmentEntryId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table CommerceDiscountUserSegmentRel";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceDiscountUserSegmentRel.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CommerceDiscountUserSegmentRel.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.discount.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRel"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.discount.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRel"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.commerce.discount.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRel"),
		true);

	public static final long COMMERCEDISCOUNTID_COLUMN_BITMASK = 1L;

	public static final long COMMERCEUSERSEGMENTENTRYID_COLUMN_BITMASK = 2L;

	public static final long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceDiscountUserSegmentRel toModel(
		CommerceDiscountUserSegmentRelSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		CommerceDiscountUserSegmentRel model =
			new CommerceDiscountUserSegmentRelImpl();

		model.setCommerceDiscountUserSegmentRelId(
			soapModel.getCommerceDiscountUserSegmentRelId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCommerceDiscountId(soapModel.getCommerceDiscountId());
		model.setCommerceUserSegmentEntryId(
			soapModel.getCommerceUserSegmentEntryId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceDiscountUserSegmentRel> toModels(
		CommerceDiscountUserSegmentRelSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommerceDiscountUserSegmentRel> models =
			new ArrayList<CommerceDiscountUserSegmentRel>(soapModels.length);

		for (CommerceDiscountUserSegmentRelSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.commerce.discount.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.commerce.discount.model.CommerceDiscountUserSegmentRel"));

	public CommerceDiscountUserSegmentRelModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceDiscountUserSegmentRelId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceDiscountUserSegmentRelId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceDiscountUserSegmentRelId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceDiscountUserSegmentRel.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceDiscountUserSegmentRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceDiscountUserSegmentRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommerceDiscountUserSegmentRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceDiscountUserSegmentRel, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(CommerceDiscountUserSegmentRel)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceDiscountUserSegmentRel, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceDiscountUserSegmentRel, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceDiscountUserSegmentRel)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceDiscountUserSegmentRel, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommerceDiscountUserSegmentRel, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map
		<String, Function<CommerceDiscountUserSegmentRel, Object>>
			_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<CommerceDiscountUserSegmentRel, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceDiscountUserSegmentRel, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String,
					 Function<CommerceDiscountUserSegmentRel, Object>>();
		Map<String, BiConsumer<CommerceDiscountUserSegmentRel, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CommerceDiscountUserSegmentRel, ?>>();

		attributeGetterFunctions.put(
			"commerceDiscountUserSegmentRelId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.
						getCommerceDiscountUserSegmentRelId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceDiscountUserSegmentRelId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object commerceDiscountUserSegmentRelId) {

					commerceDiscountUserSegmentRel.
						setCommerceDiscountUserSegmentRelId(
							(Long)commerceDiscountUserSegmentRelId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object groupId) {

					commerceDiscountUserSegmentRel.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object companyId) {

					commerceDiscountUserSegmentRel.setCompanyId(
						(Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object userId) {

					commerceDiscountUserSegmentRel.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object userName) {

					commerceDiscountUserSegmentRel.setUserName(
						(String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object createDate) {

					commerceDiscountUserSegmentRel.setCreateDate(
						(Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object modifiedDate) {

					commerceDiscountUserSegmentRel.setModifiedDate(
						(Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"commerceDiscountId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.
						getCommerceDiscountId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceDiscountId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object commerceDiscountId) {

					commerceDiscountUserSegmentRel.setCommerceDiscountId(
						(Long)commerceDiscountId);
				}

			});
		attributeGetterFunctions.put(
			"commerceUserSegmentEntryId",
			new Function<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public Object apply(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel) {

					return commerceDiscountUserSegmentRel.
						getCommerceUserSegmentEntryId();
				}

			});
		attributeSetterBiConsumers.put(
			"commerceUserSegmentEntryId",
			new BiConsumer<CommerceDiscountUserSegmentRel, Object>() {

				@Override
				public void accept(
					CommerceDiscountUserSegmentRel
						commerceDiscountUserSegmentRel,
					Object commerceUserSegmentEntryId) {

					commerceDiscountUserSegmentRel.
						setCommerceUserSegmentEntryId(
							(Long)commerceUserSegmentEntryId);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getCommerceDiscountUserSegmentRelId() {
		return _commerceDiscountUserSegmentRelId;
	}

	@Override
	public void setCommerceDiscountUserSegmentRelId(
		long commerceDiscountUserSegmentRelId) {

		_commerceDiscountUserSegmentRelId = commerceDiscountUserSegmentRelId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCommerceDiscountId() {
		return _commerceDiscountId;
	}

	@Override
	public void setCommerceDiscountId(long commerceDiscountId) {
		_columnBitmask |= COMMERCEDISCOUNTID_COLUMN_BITMASK;

		if (!_setOriginalCommerceDiscountId) {
			_setOriginalCommerceDiscountId = true;

			_originalCommerceDiscountId = _commerceDiscountId;
		}

		_commerceDiscountId = commerceDiscountId;
	}

	public long getOriginalCommerceDiscountId() {
		return _originalCommerceDiscountId;
	}

	@JSON
	@Override
	public long getCommerceUserSegmentEntryId() {
		return _commerceUserSegmentEntryId;
	}

	@Override
	public void setCommerceUserSegmentEntryId(long commerceUserSegmentEntryId) {
		_columnBitmask |= COMMERCEUSERSEGMENTENTRYID_COLUMN_BITMASK;

		if (!_setOriginalCommerceUserSegmentEntryId) {
			_setOriginalCommerceUserSegmentEntryId = true;

			_originalCommerceUserSegmentEntryId = _commerceUserSegmentEntryId;
		}

		_commerceUserSegmentEntryId = commerceUserSegmentEntryId;
	}

	public long getOriginalCommerceUserSegmentEntryId() {
		return _originalCommerceUserSegmentEntryId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommerceDiscountUserSegmentRel.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceDiscountUserSegmentRel toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel =
				(CommerceDiscountUserSegmentRel)ProxyUtil.newProxyInstance(
					_classLoader, _escapedModelInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceDiscountUserSegmentRelImpl commerceDiscountUserSegmentRelImpl =
			new CommerceDiscountUserSegmentRelImpl();

		commerceDiscountUserSegmentRelImpl.setCommerceDiscountUserSegmentRelId(
			getCommerceDiscountUserSegmentRelId());
		commerceDiscountUserSegmentRelImpl.setGroupId(getGroupId());
		commerceDiscountUserSegmentRelImpl.setCompanyId(getCompanyId());
		commerceDiscountUserSegmentRelImpl.setUserId(getUserId());
		commerceDiscountUserSegmentRelImpl.setUserName(getUserName());
		commerceDiscountUserSegmentRelImpl.setCreateDate(getCreateDate());
		commerceDiscountUserSegmentRelImpl.setModifiedDate(getModifiedDate());
		commerceDiscountUserSegmentRelImpl.setCommerceDiscountId(
			getCommerceDiscountId());
		commerceDiscountUserSegmentRelImpl.setCommerceUserSegmentEntryId(
			getCommerceUserSegmentEntryId());

		commerceDiscountUserSegmentRelImpl.resetOriginalValues();

		return commerceDiscountUserSegmentRelImpl;
	}

	@Override
	public int compareTo(
		CommerceDiscountUserSegmentRel commerceDiscountUserSegmentRel) {

		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), commerceDiscountUserSegmentRel.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceDiscountUserSegmentRel)) {
			return false;
		}

		CommerceDiscountUserSegmentRel commerceDiscountUserSegmentRel =
			(CommerceDiscountUserSegmentRel)obj;

		long primaryKey = commerceDiscountUserSegmentRel.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceDiscountUserSegmentRelModelImpl
			commerceDiscountUserSegmentRelModelImpl = this;

		commerceDiscountUserSegmentRelModelImpl._setModifiedDate = false;

		commerceDiscountUserSegmentRelModelImpl._originalCommerceDiscountId =
			commerceDiscountUserSegmentRelModelImpl._commerceDiscountId;

		commerceDiscountUserSegmentRelModelImpl._setOriginalCommerceDiscountId =
			false;

		commerceDiscountUserSegmentRelModelImpl.
			_originalCommerceUserSegmentEntryId =
				commerceDiscountUserSegmentRelModelImpl.
					_commerceUserSegmentEntryId;

		commerceDiscountUserSegmentRelModelImpl.
			_setOriginalCommerceUserSegmentEntryId = false;

		commerceDiscountUserSegmentRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceDiscountUserSegmentRel> toCacheModel() {
		CommerceDiscountUserSegmentRelCacheModel
			commerceDiscountUserSegmentRelCacheModel =
				new CommerceDiscountUserSegmentRelCacheModel();

		commerceDiscountUserSegmentRelCacheModel.
			commerceDiscountUserSegmentRelId =
				getCommerceDiscountUserSegmentRelId();

		commerceDiscountUserSegmentRelCacheModel.groupId = getGroupId();

		commerceDiscountUserSegmentRelCacheModel.companyId = getCompanyId();

		commerceDiscountUserSegmentRelCacheModel.userId = getUserId();

		commerceDiscountUserSegmentRelCacheModel.userName = getUserName();

		String userName = commerceDiscountUserSegmentRelCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceDiscountUserSegmentRelCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceDiscountUserSegmentRelCacheModel.createDate =
				createDate.getTime();
		}
		else {
			commerceDiscountUserSegmentRelCacheModel.createDate =
				Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceDiscountUserSegmentRelCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commerceDiscountUserSegmentRelCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		commerceDiscountUserSegmentRelCacheModel.commerceDiscountId =
			getCommerceDiscountId();

		commerceDiscountUserSegmentRelCacheModel.commerceUserSegmentEntryId =
			getCommerceUserSegmentEntryId();

		return commerceDiscountUserSegmentRelCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceDiscountUserSegmentRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommerceDiscountUserSegmentRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceDiscountUserSegmentRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply(
					(CommerceDiscountUserSegmentRel)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceDiscountUserSegmentRel, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommerceDiscountUserSegmentRel, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceDiscountUserSegmentRel, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply(
					(CommerceDiscountUserSegmentRel)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		CommerceDiscountUserSegmentRel.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		CommerceDiscountUserSegmentRel.class, ModelWrapper.class
	};

	private long _commerceDiscountUserSegmentRelId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _commerceDiscountId;
	private long _originalCommerceDiscountId;
	private boolean _setOriginalCommerceDiscountId;
	private long _commerceUserSegmentEntryId;
	private long _originalCommerceUserSegmentEntryId;
	private boolean _setOriginalCommerceUserSegmentEntryId;
	private long _columnBitmask;
	private CommerceDiscountUserSegmentRel _escapedModel;

}
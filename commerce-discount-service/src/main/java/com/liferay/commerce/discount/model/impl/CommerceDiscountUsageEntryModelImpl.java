/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.discount.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.commerce.discount.model.CommerceDiscountUsageEntry;
import com.liferay.commerce.discount.model.CommerceDiscountUsageEntryModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CommerceDiscountUsageEntry service. Represents a row in the &quot;CommerceDiscountUsageEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CommerceDiscountUsageEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceDiscountUsageEntryImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceDiscountUsageEntryImpl
 * @see CommerceDiscountUsageEntry
 * @see CommerceDiscountUsageEntryModel
 * @generated
 */
@ProviderType
public class CommerceDiscountUsageEntryModelImpl extends BaseModelImpl<CommerceDiscountUsageEntry>
	implements CommerceDiscountUsageEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce discount usage entry model instance should use the {@link CommerceDiscountUsageEntry} interface instead.
	 */
	public static final String TABLE_NAME = "CommerceDiscountUsageEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "commerceDiscountUsageEntryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "discountUserId", Types.BIGINT },
			{ "discountOrganizationId", Types.BIGINT },
			{ "commerceOrderId", Types.BIGINT },
			{ "commerceDiscountId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("commerceDiscountUsageEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("discountUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("discountOrganizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceOrderId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("commerceDiscountId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table CommerceDiscountUsageEntry (commerceDiscountUsageEntryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,discountUserId LONG,discountOrganizationId LONG,commerceOrderId LONG,commerceDiscountId LONG)";
	public static final String TABLE_SQL_DROP = "drop table CommerceDiscountUsageEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY commerceDiscountUsageEntry.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CommerceDiscountUsageEntry.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscountUsageEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscountUsageEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.commerce.discount.model.CommerceDiscountUsageEntry"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.commerce.discount.model.CommerceDiscountUsageEntry"));

	public CommerceDiscountUsageEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceDiscountUsageEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceDiscountUsageEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceDiscountUsageEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceDiscountUsageEntry.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceDiscountUsageEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("commerceDiscountUsageEntryId",
			getCommerceDiscountUsageEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("discountUserId", getDiscountUserId());
		attributes.put("discountOrganizationId", getDiscountOrganizationId());
		attributes.put("commerceOrderId", getCommerceOrderId());
		attributes.put("commerceDiscountId", getCommerceDiscountId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long commerceDiscountUsageEntryId = (Long)attributes.get(
				"commerceDiscountUsageEntryId");

		if (commerceDiscountUsageEntryId != null) {
			setCommerceDiscountUsageEntryId(commerceDiscountUsageEntryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long discountUserId = (Long)attributes.get("discountUserId");

		if (discountUserId != null) {
			setDiscountUserId(discountUserId);
		}

		Long discountOrganizationId = (Long)attributes.get(
				"discountOrganizationId");

		if (discountOrganizationId != null) {
			setDiscountOrganizationId(discountOrganizationId);
		}

		Long commerceOrderId = (Long)attributes.get("commerceOrderId");

		if (commerceOrderId != null) {
			setCommerceOrderId(commerceOrderId);
		}

		Long commerceDiscountId = (Long)attributes.get("commerceDiscountId");

		if (commerceDiscountId != null) {
			setCommerceDiscountId(commerceDiscountId);
		}
	}

	@Override
	public long getCommerceDiscountUsageEntryId() {
		return _commerceDiscountUsageEntryId;
	}

	@Override
	public void setCommerceDiscountUsageEntryId(
		long commerceDiscountUsageEntryId) {
		_commerceDiscountUsageEntryId = commerceDiscountUsageEntryId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDiscountUserId() {
		return _discountUserId;
	}

	@Override
	public void setDiscountUserId(long discountUserId) {
		_discountUserId = discountUserId;
	}

	@Override
	public String getDiscountUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getDiscountUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setDiscountUserUuid(String discountUserUuid) {
	}

	@Override
	public long getDiscountOrganizationId() {
		return _discountOrganizationId;
	}

	@Override
	public void setDiscountOrganizationId(long discountOrganizationId) {
		_discountOrganizationId = discountOrganizationId;
	}

	@Override
	public long getCommerceOrderId() {
		return _commerceOrderId;
	}

	@Override
	public void setCommerceOrderId(long commerceOrderId) {
		_commerceOrderId = commerceOrderId;
	}

	@Override
	public long getCommerceDiscountId() {
		return _commerceDiscountId;
	}

	@Override
	public void setCommerceDiscountId(long commerceDiscountId) {
		_commerceDiscountId = commerceDiscountId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CommerceDiscountUsageEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceDiscountUsageEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CommerceDiscountUsageEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceDiscountUsageEntryImpl commerceDiscountUsageEntryImpl = new CommerceDiscountUsageEntryImpl();

		commerceDiscountUsageEntryImpl.setCommerceDiscountUsageEntryId(getCommerceDiscountUsageEntryId());
		commerceDiscountUsageEntryImpl.setGroupId(getGroupId());
		commerceDiscountUsageEntryImpl.setCompanyId(getCompanyId());
		commerceDiscountUsageEntryImpl.setUserId(getUserId());
		commerceDiscountUsageEntryImpl.setUserName(getUserName());
		commerceDiscountUsageEntryImpl.setCreateDate(getCreateDate());
		commerceDiscountUsageEntryImpl.setModifiedDate(getModifiedDate());
		commerceDiscountUsageEntryImpl.setDiscountUserId(getDiscountUserId());
		commerceDiscountUsageEntryImpl.setDiscountOrganizationId(getDiscountOrganizationId());
		commerceDiscountUsageEntryImpl.setCommerceOrderId(getCommerceOrderId());
		commerceDiscountUsageEntryImpl.setCommerceDiscountId(getCommerceDiscountId());

		commerceDiscountUsageEntryImpl.resetOriginalValues();

		return commerceDiscountUsageEntryImpl;
	}

	@Override
	public int compareTo(CommerceDiscountUsageEntry commerceDiscountUsageEntry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				commerceDiscountUsageEntry.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceDiscountUsageEntry)) {
			return false;
		}

		CommerceDiscountUsageEntry commerceDiscountUsageEntry = (CommerceDiscountUsageEntry)obj;

		long primaryKey = commerceDiscountUsageEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceDiscountUsageEntryModelImpl commerceDiscountUsageEntryModelImpl = this;

		commerceDiscountUsageEntryModelImpl._originalGroupId = commerceDiscountUsageEntryModelImpl._groupId;

		commerceDiscountUsageEntryModelImpl._setOriginalGroupId = false;

		commerceDiscountUsageEntryModelImpl._setModifiedDate = false;

		commerceDiscountUsageEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceDiscountUsageEntry> toCacheModel() {
		CommerceDiscountUsageEntryCacheModel commerceDiscountUsageEntryCacheModel =
			new CommerceDiscountUsageEntryCacheModel();

		commerceDiscountUsageEntryCacheModel.commerceDiscountUsageEntryId = getCommerceDiscountUsageEntryId();

		commerceDiscountUsageEntryCacheModel.groupId = getGroupId();

		commerceDiscountUsageEntryCacheModel.companyId = getCompanyId();

		commerceDiscountUsageEntryCacheModel.userId = getUserId();

		commerceDiscountUsageEntryCacheModel.userName = getUserName();

		String userName = commerceDiscountUsageEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceDiscountUsageEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceDiscountUsageEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceDiscountUsageEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceDiscountUsageEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			commerceDiscountUsageEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceDiscountUsageEntryCacheModel.discountUserId = getDiscountUserId();

		commerceDiscountUsageEntryCacheModel.discountOrganizationId = getDiscountOrganizationId();

		commerceDiscountUsageEntryCacheModel.commerceOrderId = getCommerceOrderId();

		commerceDiscountUsageEntryCacheModel.commerceDiscountId = getCommerceDiscountId();

		return commerceDiscountUsageEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{commerceDiscountUsageEntryId=");
		sb.append(getCommerceDiscountUsageEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", discountUserId=");
		sb.append(getDiscountUserId());
		sb.append(", discountOrganizationId=");
		sb.append(getDiscountOrganizationId());
		sb.append(", commerceOrderId=");
		sb.append(getCommerceOrderId());
		sb.append(", commerceDiscountId=");
		sb.append(getCommerceDiscountId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.commerce.discount.model.CommerceDiscountUsageEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>commerceDiscountUsageEntryId</column-name><column-value><![CDATA[");
		sb.append(getCommerceDiscountUsageEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discountUserId</column-name><column-value><![CDATA[");
		sb.append(getDiscountUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discountOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getDiscountOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceOrderId</column-name><column-value><![CDATA[");
		sb.append(getCommerceOrderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceDiscountId</column-name><column-value><![CDATA[");
		sb.append(getCommerceDiscountId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CommerceDiscountUsageEntry.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CommerceDiscountUsageEntry.class, ModelWrapper.class
		};
	private long _commerceDiscountUsageEntryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _discountUserId;
	private long _discountOrganizationId;
	private long _commerceOrderId;
	private long _commerceDiscountId;
	private long _columnBitmask;
	private CommerceDiscountUsageEntry _escapedModel;
}
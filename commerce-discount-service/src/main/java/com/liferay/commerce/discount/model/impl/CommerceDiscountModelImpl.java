/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.discount.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.commerce.discount.model.CommerceDiscount;
import com.liferay.commerce.discount.model.CommerceDiscountModel;
import com.liferay.commerce.discount.model.CommerceDiscountSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.math.BigDecimal;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CommerceDiscount service. Represents a row in the &quot;CommerceDiscount&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CommerceDiscountModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceDiscountImpl}.
 * </p>
 *
 * @author Marco Leo
 * @see CommerceDiscountImpl
 * @see CommerceDiscount
 * @see CommerceDiscountModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CommerceDiscountModelImpl extends BaseModelImpl<CommerceDiscount>
	implements CommerceDiscountModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce discount model instance should use the {@link CommerceDiscount} interface instead.
	 */
	public static final String TABLE_NAME = "CommerceDiscount";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "commerceDiscountId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "target", Types.VARCHAR },
			{ "useCouponCode", Types.BOOLEAN },
			{ "couponCode", Types.VARCHAR },
			{ "usePercentage", Types.BOOLEAN },
			{ "maximumDiscountAmount", Types.DECIMAL },
			{ "level1", Types.DECIMAL },
			{ "level2", Types.DECIMAL },
			{ "level3", Types.DECIMAL },
			{ "level4", Types.DECIMAL },
			{ "limitationType", Types.VARCHAR },
			{ "limitationTimes", Types.INTEGER },
			{ "numberOfUse", Types.INTEGER },
			{ "active_", Types.BOOLEAN },
			{ "displayDate", Types.TIMESTAMP },
			{ "expirationDate", Types.TIMESTAMP },
			{ "lastPublishDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commerceDiscountId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("target", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("useCouponCode", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("couponCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("usePercentage", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("maximumDiscountAmount", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("level1", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("level2", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("level3", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("level4", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("limitationType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("limitationTimes", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("numberOfUse", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("active_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("displayDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("lastPublishDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table CommerceDiscount (uuid_ VARCHAR(75) null,commerceDiscountId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,title VARCHAR(75) null,target VARCHAR(75) null,useCouponCode BOOLEAN,couponCode VARCHAR(75) null,usePercentage BOOLEAN,maximumDiscountAmount DECIMAL(30, 16) null,level1 DECIMAL(30, 16) null,level2 DECIMAL(30, 16) null,level3 DECIMAL(30, 16) null,level4 DECIMAL(30, 16) null,limitationType VARCHAR(75) null,limitationTimes INTEGER,numberOfUse INTEGER,active_ BOOLEAN,displayDate DATE null,expirationDate DATE null,lastPublishDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table CommerceDiscount";
	public static final String ORDER_BY_JPQL = " ORDER BY commerceDiscount.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY CommerceDiscount.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscount"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.commerce.discount.model.CommerceDiscount"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.commerce.discount.model.CommerceDiscount"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long COUPONCODE_COLUMN_BITMASK = 2L;
	public static final long DISPLAYDATE_COLUMN_BITMASK = 4L;
	public static final long EXPIRATIONDATE_COLUMN_BITMASK = 8L;
	public static final long GROUPID_COLUMN_BITMASK = 16L;
	public static final long STATUS_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long CREATEDATE_COLUMN_BITMASK = 128L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CommerceDiscount toModel(CommerceDiscountSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CommerceDiscount model = new CommerceDiscountImpl();

		model.setUuid(soapModel.getUuid());
		model.setCommerceDiscountId(soapModel.getCommerceDiscountId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTitle(soapModel.getTitle());
		model.setTarget(soapModel.getTarget());
		model.setUseCouponCode(soapModel.isUseCouponCode());
		model.setCouponCode(soapModel.getCouponCode());
		model.setUsePercentage(soapModel.isUsePercentage());
		model.setMaximumDiscountAmount(soapModel.getMaximumDiscountAmount());
		model.setLevel1(soapModel.getLevel1());
		model.setLevel2(soapModel.getLevel2());
		model.setLevel3(soapModel.getLevel3());
		model.setLevel4(soapModel.getLevel4());
		model.setLimitationType(soapModel.getLimitationType());
		model.setLimitationTimes(soapModel.getLimitationTimes());
		model.setNumberOfUse(soapModel.getNumberOfUse());
		model.setActive(soapModel.isActive());
		model.setDisplayDate(soapModel.getDisplayDate());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setLastPublishDate(soapModel.getLastPublishDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CommerceDiscount> toModels(
		CommerceDiscountSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CommerceDiscount> models = new ArrayList<CommerceDiscount>(soapModels.length);

		for (CommerceDiscountSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.commerce.discount.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.commerce.discount.model.CommerceDiscount"));

	public CommerceDiscountModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceDiscountId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceDiscountId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceDiscountId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceDiscount.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceDiscount.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("commerceDiscountId", getCommerceDiscountId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("title", getTitle());
		attributes.put("target", getTarget());
		attributes.put("useCouponCode", isUseCouponCode());
		attributes.put("couponCode", getCouponCode());
		attributes.put("usePercentage", isUsePercentage());
		attributes.put("maximumDiscountAmount", getMaximumDiscountAmount());
		attributes.put("level1", getLevel1());
		attributes.put("level2", getLevel2());
		attributes.put("level3", getLevel3());
		attributes.put("level4", getLevel4());
		attributes.put("limitationType", getLimitationType());
		attributes.put("limitationTimes", getLimitationTimes());
		attributes.put("numberOfUse", getNumberOfUse());
		attributes.put("active", isActive());
		attributes.put("displayDate", getDisplayDate());
		attributes.put("expirationDate", getExpirationDate());
		attributes.put("lastPublishDate", getLastPublishDate());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long commerceDiscountId = (Long)attributes.get("commerceDiscountId");

		if (commerceDiscountId != null) {
			setCommerceDiscountId(commerceDiscountId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String target = (String)attributes.get("target");

		if (target != null) {
			setTarget(target);
		}

		Boolean useCouponCode = (Boolean)attributes.get("useCouponCode");

		if (useCouponCode != null) {
			setUseCouponCode(useCouponCode);
		}

		String couponCode = (String)attributes.get("couponCode");

		if (couponCode != null) {
			setCouponCode(couponCode);
		}

		Boolean usePercentage = (Boolean)attributes.get("usePercentage");

		if (usePercentage != null) {
			setUsePercentage(usePercentage);
		}

		BigDecimal maximumDiscountAmount = (BigDecimal)attributes.get(
				"maximumDiscountAmount");

		if (maximumDiscountAmount != null) {
			setMaximumDiscountAmount(maximumDiscountAmount);
		}

		BigDecimal level1 = (BigDecimal)attributes.get("level1");

		if (level1 != null) {
			setLevel1(level1);
		}

		BigDecimal level2 = (BigDecimal)attributes.get("level2");

		if (level2 != null) {
			setLevel2(level2);
		}

		BigDecimal level3 = (BigDecimal)attributes.get("level3");

		if (level3 != null) {
			setLevel3(level3);
		}

		BigDecimal level4 = (BigDecimal)attributes.get("level4");

		if (level4 != null) {
			setLevel4(level4);
		}

		String limitationType = (String)attributes.get("limitationType");

		if (limitationType != null) {
			setLimitationType(limitationType);
		}

		Integer limitationTimes = (Integer)attributes.get("limitationTimes");

		if (limitationTimes != null) {
			setLimitationTimes(limitationTimes);
		}

		Integer numberOfUse = (Integer)attributes.get("numberOfUse");

		if (numberOfUse != null) {
			setNumberOfUse(numberOfUse);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Date displayDate = (Date)attributes.get("displayDate");

		if (displayDate != null) {
			setDisplayDate(displayDate);
		}

		Date expirationDate = (Date)attributes.get("expirationDate");

		if (expirationDate != null) {
			setExpirationDate(expirationDate);
		}

		Date lastPublishDate = (Date)attributes.get("lastPublishDate");

		if (lastPublishDate != null) {
			setLastPublishDate(lastPublishDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getCommerceDiscountId() {
		return _commerceDiscountId;
	}

	@Override
	public void setCommerceDiscountId(long commerceDiscountId) {
		_commerceDiscountId = commerceDiscountId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@JSON
	@Override
	public String getTarget() {
		if (_target == null) {
			return "";
		}
		else {
			return _target;
		}
	}

	@Override
	public void setTarget(String target) {
		_target = target;
	}

	@JSON
	@Override
	public boolean getUseCouponCode() {
		return _useCouponCode;
	}

	@JSON
	@Override
	public boolean isUseCouponCode() {
		return _useCouponCode;
	}

	@Override
	public void setUseCouponCode(boolean useCouponCode) {
		_useCouponCode = useCouponCode;
	}

	@JSON
	@Override
	public String getCouponCode() {
		if (_couponCode == null) {
			return "";
		}
		else {
			return _couponCode;
		}
	}

	@Override
	public void setCouponCode(String couponCode) {
		_columnBitmask |= COUPONCODE_COLUMN_BITMASK;

		if (_originalCouponCode == null) {
			_originalCouponCode = _couponCode;
		}

		_couponCode = couponCode;
	}

	public String getOriginalCouponCode() {
		return GetterUtil.getString(_originalCouponCode);
	}

	@JSON
	@Override
	public boolean getUsePercentage() {
		return _usePercentage;
	}

	@JSON
	@Override
	public boolean isUsePercentage() {
		return _usePercentage;
	}

	@Override
	public void setUsePercentage(boolean usePercentage) {
		_usePercentage = usePercentage;
	}

	@JSON
	@Override
	public BigDecimal getMaximumDiscountAmount() {
		return _maximumDiscountAmount;
	}

	@Override
	public void setMaximumDiscountAmount(BigDecimal maximumDiscountAmount) {
		_maximumDiscountAmount = maximumDiscountAmount;
	}

	@JSON
	@Override
	public BigDecimal getLevel1() {
		return _level1;
	}

	@Override
	public void setLevel1(BigDecimal level1) {
		_level1 = level1;
	}

	@JSON
	@Override
	public BigDecimal getLevel2() {
		return _level2;
	}

	@Override
	public void setLevel2(BigDecimal level2) {
		_level2 = level2;
	}

	@JSON
	@Override
	public BigDecimal getLevel3() {
		return _level3;
	}

	@Override
	public void setLevel3(BigDecimal level3) {
		_level3 = level3;
	}

	@JSON
	@Override
	public BigDecimal getLevel4() {
		return _level4;
	}

	@Override
	public void setLevel4(BigDecimal level4) {
		_level4 = level4;
	}

	@JSON
	@Override
	public String getLimitationType() {
		if (_limitationType == null) {
			return "";
		}
		else {
			return _limitationType;
		}
	}

	@Override
	public void setLimitationType(String limitationType) {
		_limitationType = limitationType;
	}

	@JSON
	@Override
	public int getLimitationTimes() {
		return _limitationTimes;
	}

	@Override
	public void setLimitationTimes(int limitationTimes) {
		_limitationTimes = limitationTimes;
	}

	@JSON
	@Override
	public int getNumberOfUse() {
		return _numberOfUse;
	}

	@Override
	public void setNumberOfUse(int numberOfUse) {
		_numberOfUse = numberOfUse;
	}

	@JSON
	@Override
	public boolean getActive() {
		return _active;
	}

	@JSON
	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_active = active;
	}

	@JSON
	@Override
	public Date getDisplayDate() {
		return _displayDate;
	}

	@Override
	public void setDisplayDate(Date displayDate) {
		_columnBitmask |= DISPLAYDATE_COLUMN_BITMASK;

		if (_originalDisplayDate == null) {
			_originalDisplayDate = _displayDate;
		}

		_displayDate = displayDate;
	}

	public Date getOriginalDisplayDate() {
		return _originalDisplayDate;
	}

	@JSON
	@Override
	public Date getExpirationDate() {
		return _expirationDate;
	}

	@Override
	public void setExpirationDate(Date expirationDate) {
		_columnBitmask |= EXPIRATIONDATE_COLUMN_BITMASK;

		if (_originalExpirationDate == null) {
			_originalExpirationDate = _expirationDate;
		}

		_expirationDate = expirationDate;
	}

	public Date getOriginalExpirationDate() {
		return _originalExpirationDate;
	}

	@JSON
	@Override
	public Date getLastPublishDate() {
		return _lastPublishDate;
	}

	@Override
	public void setLastPublishDate(Date lastPublishDate) {
		_lastPublishDate = lastPublishDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				CommerceDiscount.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CommerceDiscount.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceDiscount toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CommerceDiscount)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceDiscountImpl commerceDiscountImpl = new CommerceDiscountImpl();

		commerceDiscountImpl.setUuid(getUuid());
		commerceDiscountImpl.setCommerceDiscountId(getCommerceDiscountId());
		commerceDiscountImpl.setGroupId(getGroupId());
		commerceDiscountImpl.setCompanyId(getCompanyId());
		commerceDiscountImpl.setUserId(getUserId());
		commerceDiscountImpl.setUserName(getUserName());
		commerceDiscountImpl.setCreateDate(getCreateDate());
		commerceDiscountImpl.setModifiedDate(getModifiedDate());
		commerceDiscountImpl.setTitle(getTitle());
		commerceDiscountImpl.setTarget(getTarget());
		commerceDiscountImpl.setUseCouponCode(isUseCouponCode());
		commerceDiscountImpl.setCouponCode(getCouponCode());
		commerceDiscountImpl.setUsePercentage(isUsePercentage());
		commerceDiscountImpl.setMaximumDiscountAmount(getMaximumDiscountAmount());
		commerceDiscountImpl.setLevel1(getLevel1());
		commerceDiscountImpl.setLevel2(getLevel2());
		commerceDiscountImpl.setLevel3(getLevel3());
		commerceDiscountImpl.setLevel4(getLevel4());
		commerceDiscountImpl.setLimitationType(getLimitationType());
		commerceDiscountImpl.setLimitationTimes(getLimitationTimes());
		commerceDiscountImpl.setNumberOfUse(getNumberOfUse());
		commerceDiscountImpl.setActive(isActive());
		commerceDiscountImpl.setDisplayDate(getDisplayDate());
		commerceDiscountImpl.setExpirationDate(getExpirationDate());
		commerceDiscountImpl.setLastPublishDate(getLastPublishDate());
		commerceDiscountImpl.setStatus(getStatus());
		commerceDiscountImpl.setStatusByUserId(getStatusByUserId());
		commerceDiscountImpl.setStatusByUserName(getStatusByUserName());
		commerceDiscountImpl.setStatusDate(getStatusDate());

		commerceDiscountImpl.resetOriginalValues();

		return commerceDiscountImpl;
	}

	@Override
	public int compareTo(CommerceDiscount commerceDiscount) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				commerceDiscount.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CommerceDiscount)) {
			return false;
		}

		CommerceDiscount commerceDiscount = (CommerceDiscount)obj;

		long primaryKey = commerceDiscount.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CommerceDiscountModelImpl commerceDiscountModelImpl = this;

		commerceDiscountModelImpl._originalUuid = commerceDiscountModelImpl._uuid;

		commerceDiscountModelImpl._originalGroupId = commerceDiscountModelImpl._groupId;

		commerceDiscountModelImpl._setOriginalGroupId = false;

		commerceDiscountModelImpl._originalCompanyId = commerceDiscountModelImpl._companyId;

		commerceDiscountModelImpl._setOriginalCompanyId = false;

		commerceDiscountModelImpl._setModifiedDate = false;

		commerceDiscountModelImpl._originalCouponCode = commerceDiscountModelImpl._couponCode;

		commerceDiscountModelImpl._originalDisplayDate = commerceDiscountModelImpl._displayDate;

		commerceDiscountModelImpl._originalExpirationDate = commerceDiscountModelImpl._expirationDate;

		commerceDiscountModelImpl._originalStatus = commerceDiscountModelImpl._status;

		commerceDiscountModelImpl._setOriginalStatus = false;

		commerceDiscountModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceDiscount> toCacheModel() {
		CommerceDiscountCacheModel commerceDiscountCacheModel = new CommerceDiscountCacheModel();

		commerceDiscountCacheModel.uuid = getUuid();

		String uuid = commerceDiscountCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			commerceDiscountCacheModel.uuid = null;
		}

		commerceDiscountCacheModel.commerceDiscountId = getCommerceDiscountId();

		commerceDiscountCacheModel.groupId = getGroupId();

		commerceDiscountCacheModel.companyId = getCompanyId();

		commerceDiscountCacheModel.userId = getUserId();

		commerceDiscountCacheModel.userName = getUserName();

		String userName = commerceDiscountCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceDiscountCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceDiscountCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceDiscountCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceDiscountCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			commerceDiscountCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceDiscountCacheModel.title = getTitle();

		String title = commerceDiscountCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			commerceDiscountCacheModel.title = null;
		}

		commerceDiscountCacheModel.target = getTarget();

		String target = commerceDiscountCacheModel.target;

		if ((target != null) && (target.length() == 0)) {
			commerceDiscountCacheModel.target = null;
		}

		commerceDiscountCacheModel.useCouponCode = isUseCouponCode();

		commerceDiscountCacheModel.couponCode = getCouponCode();

		String couponCode = commerceDiscountCacheModel.couponCode;

		if ((couponCode != null) && (couponCode.length() == 0)) {
			commerceDiscountCacheModel.couponCode = null;
		}

		commerceDiscountCacheModel.usePercentage = isUsePercentage();

		commerceDiscountCacheModel.maximumDiscountAmount = getMaximumDiscountAmount();

		commerceDiscountCacheModel.level1 = getLevel1();

		commerceDiscountCacheModel.level2 = getLevel2();

		commerceDiscountCacheModel.level3 = getLevel3();

		commerceDiscountCacheModel.level4 = getLevel4();

		commerceDiscountCacheModel.limitationType = getLimitationType();

		String limitationType = commerceDiscountCacheModel.limitationType;

		if ((limitationType != null) && (limitationType.length() == 0)) {
			commerceDiscountCacheModel.limitationType = null;
		}

		commerceDiscountCacheModel.limitationTimes = getLimitationTimes();

		commerceDiscountCacheModel.numberOfUse = getNumberOfUse();

		commerceDiscountCacheModel.active = isActive();

		Date displayDate = getDisplayDate();

		if (displayDate != null) {
			commerceDiscountCacheModel.displayDate = displayDate.getTime();
		}
		else {
			commerceDiscountCacheModel.displayDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			commerceDiscountCacheModel.expirationDate = expirationDate.getTime();
		}
		else {
			commerceDiscountCacheModel.expirationDate = Long.MIN_VALUE;
		}

		Date lastPublishDate = getLastPublishDate();

		if (lastPublishDate != null) {
			commerceDiscountCacheModel.lastPublishDate = lastPublishDate.getTime();
		}
		else {
			commerceDiscountCacheModel.lastPublishDate = Long.MIN_VALUE;
		}

		commerceDiscountCacheModel.status = getStatus();

		commerceDiscountCacheModel.statusByUserId = getStatusByUserId();

		commerceDiscountCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = commerceDiscountCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			commerceDiscountCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			commerceDiscountCacheModel.statusDate = statusDate.getTime();
		}
		else {
			commerceDiscountCacheModel.statusDate = Long.MIN_VALUE;
		}

		return commerceDiscountCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(59);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", commerceDiscountId=");
		sb.append(getCommerceDiscountId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", target=");
		sb.append(getTarget());
		sb.append(", useCouponCode=");
		sb.append(isUseCouponCode());
		sb.append(", couponCode=");
		sb.append(getCouponCode());
		sb.append(", usePercentage=");
		sb.append(isUsePercentage());
		sb.append(", maximumDiscountAmount=");
		sb.append(getMaximumDiscountAmount());
		sb.append(", level1=");
		sb.append(getLevel1());
		sb.append(", level2=");
		sb.append(getLevel2());
		sb.append(", level3=");
		sb.append(getLevel3());
		sb.append(", level4=");
		sb.append(getLevel4());
		sb.append(", limitationType=");
		sb.append(getLimitationType());
		sb.append(", limitationTimes=");
		sb.append(getLimitationTimes());
		sb.append(", numberOfUse=");
		sb.append(getNumberOfUse());
		sb.append(", active=");
		sb.append(isActive());
		sb.append(", displayDate=");
		sb.append(getDisplayDate());
		sb.append(", expirationDate=");
		sb.append(getExpirationDate());
		sb.append(", lastPublishDate=");
		sb.append(getLastPublishDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(91);

		sb.append("<model><model-name>");
		sb.append("com.liferay.commerce.discount.model.CommerceDiscount");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commerceDiscountId</column-name><column-value><![CDATA[");
		sb.append(getCommerceDiscountId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>target</column-name><column-value><![CDATA[");
		sb.append(getTarget());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>useCouponCode</column-name><column-value><![CDATA[");
		sb.append(isUseCouponCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>couponCode</column-name><column-value><![CDATA[");
		sb.append(getCouponCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usePercentage</column-name><column-value><![CDATA[");
		sb.append(isUsePercentage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maximumDiscountAmount</column-name><column-value><![CDATA[");
		sb.append(getMaximumDiscountAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level1</column-name><column-value><![CDATA[");
		sb.append(getLevel1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level2</column-name><column-value><![CDATA[");
		sb.append(getLevel2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level3</column-name><column-value><![CDATA[");
		sb.append(getLevel3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level4</column-name><column-value><![CDATA[");
		sb.append(getLevel4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>limitationType</column-name><column-value><![CDATA[");
		sb.append(getLimitationType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>limitationTimes</column-name><column-value><![CDATA[");
		sb.append(getLimitationTimes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfUse</column-name><column-value><![CDATA[");
		sb.append(getNumberOfUse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(isActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayDate</column-name><column-value><![CDATA[");
		sb.append(getDisplayDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expirationDate</column-name><column-value><![CDATA[");
		sb.append(getExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastPublishDate</column-name><column-value><![CDATA[");
		sb.append(getLastPublishDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CommerceDiscount.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CommerceDiscount.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _commerceDiscountId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _title;
	private String _target;
	private boolean _useCouponCode;
	private String _couponCode;
	private String _originalCouponCode;
	private boolean _usePercentage;
	private BigDecimal _maximumDiscountAmount;
	private BigDecimal _level1;
	private BigDecimal _level2;
	private BigDecimal _level3;
	private BigDecimal _level4;
	private String _limitationType;
	private int _limitationTimes;
	private int _numberOfUse;
	private boolean _active;
	private Date _displayDate;
	private Date _originalDisplayDate;
	private Date _expirationDate;
	private Date _originalExpirationDate;
	private Date _lastPublishDate;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private long _columnBitmask;
	private CommerceDiscount _escapedModel;
}
openapi: 3.0.0
info:
  title: Liferay Commerce Admin Pricing API
  description: Liferay Commerce Admin Pricing API
  contact:
    name: Commerce Team
    email: team-commerce@liferay.com
  license:
    name: GNU Lesser General Public License 2.1
    url: https://www.gnu.org/licenses/lgpl-2.1.html
  version: v1.0
servers:
- url: https://virtserver.swaggerhub.com/liferayinc/commerce-admin-pricing/v1.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/liferay6/commerce-admin-pricing/v1.0
  description: SwaggerHub API Auto Mocking
- url: https://commerce.{environment}.liferay.com/commerce-admin-pricing/{basePath}
  description: Liferay Commerce API server
  variables:
    basePath:
      default: v1.0
    environment:
      default: api
      enum:
      - api
      - api.dev
      - api.uat
- url: '{protocol}://{host}.ngrok.io/o/commerce-admin-pricing/{basePath}'
  description: Liferay Commerce Local Development with Ngrok
  variables:
    host:
      default: commerce
    protocol:
      default: http
      enum:
      - http
      - https
    basePath:
      default: v1.0
- url: '{protocol}://{host}:{port}/o/commerce-admin-pricing/{basePath}'
  description: Liferay Commerce Local Development (Hosts file)
  variables:
    host:
      default: test.dev
    port:
      default: "8080"
      enum:
      - "8080"
      - "8443"
      - "443"
    protocol:
      default: http
      enum:
      - http
      - https
    basePath:
      default: v1.0
tags:
- name: Discount
  description: Operations on Discounts
- name: DiscountRule
  description: Operations on Discount Rules
- name: PriceEntry
  description: Operations on Price Entries
- name: PriceList
  description: Operations on Price Lists
- name: TierPrice
  description: Operations on Tier Prices
paths:
  /discounts/{id}:
    get:
      operationId: getDiscount
      tags:
      - Discount
      summary: Gets a Discount by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
            application/xml:
              schema:
                $ref: '#/components/schemas/Discount'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
    delete:
      operationId: deleteDiscount
      tags:
      - Discount
      summary: Deletes a Discount by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      responses:
        204:
          description: No content
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
    patch:
      operationId: patchDiscount
      tags:
      - Discount
      summary: Updates a Discount by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/xml:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      responses:
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /discount/{id}/discountRules/:
    get:
      operationId: getDiscountDiscountRulesPage
      tags:
      - Discount
      summary: Gets a list of Discount Rule related to a Discount.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscountRule'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscountRule'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
  /discount/{id}/discountRule/:
    post:
      operationId: postDiscountDiscountRule
      tags:
      - Discount
      summary: Creates or Updates a Discount Rule.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRule'
          application/xml:
            schema:
              $ref: '#/components/schemas/DiscountRule'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRule'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscountRule'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /discounts/:
    get:
      operationId: getDiscountsPage
      tags:
      - Discount
      summary: Gets a list of Discount.
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
  /discount/:
    post:
      operationId: postDiscount
      tags:
      - Discount
      summary: Creates or Updates a Discount.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/xml:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
            application/xml:
              schema:
                $ref: '#/components/schemas/Discount'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /discountRules/{id}:
    get:
      operationId: getDiscountRule
      tags:
      - DiscountRule
      summary: Gets a Discount Rule by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRule'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscountRule'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
    post:
      operationId: postDiscountRule
      tags:
      - DiscountRule
      summary: Updates a Discount Rule by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRule'
          application/xml:
            schema:
              $ref: '#/components/schemas/DiscountRule'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRule'
            application/xml:
              schema:
                $ref: '#/components/schemas/DiscountRule'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
    delete:
      operationId: deleteDiscountRule
      tags:
      - DiscountRule
      summary: Deletes a Discount Rule by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
          description: The resource Id
          format: int64
          example: 30130
      responses:
        204:
          description: No content
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /priceEntries/{id}:
    get:
      operationId: getPriceEntry
      tags:
      - PriceEntry
      summary: Gets a Price Entry by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceEntry'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
    delete:
      operationId: deletePriceEntry
      tags:
      - PriceEntry
      summary: Deletes a Price Entry by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        204:
          description: No content
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
    patch:
      operationId: patchPriceEntry
      tags:
      - PriceEntry
      summary: Updates a Price Entry by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceEntry'
        required: true
      responses:
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /priceEntries/{id}/tierPrices/:
    get:
      operationId: getPriceEntryTierPricesPage
      tags:
      - PriceEntry
      summary: Gets a list of Tier Price related to a Price Entry.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TierPrice'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TierPrice'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
  /priceEntries/{id}/tierPrice/:
    post:
      operationId: postPriceEntryTierPrice
      tags:
      - PriceEntry
      summary: Creates or Updates a Tier Price.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TierPrice'
          application/xml:
            schema:
              $ref: '#/components/schemas/TierPrice'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierPrice'
            application/xml:
              schema:
                $ref: '#/components/schemas/TierPrice'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /priceLists/{id}/priceEntries/:
    get:
      operationId: getPriceListPriceEntriesPage
      tags:
      - PriceList
      summary: Gets a list of Price Entries.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceEntry'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceEntry'
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
  /priceLists/{id}/priceEntry/:
    post:
      operationId: postPriceListPriceEntry
      tags:
      - PriceList
      summary: Creates or updates a Price Entry.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceEntry'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceEntry'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /priceLists/{id}:
    get:
      operationId: getPriceList
      tags:
      - PriceList
      summary: Gets a Price List by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
    delete:
      operationId: deletePriceList
      tags:
      - PriceList
      summary: Deletes a Price List by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        204:
          description: No content
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
    patch:
      operationId: patchPriceList
      tags:
      - PriceList
      summary: Updates a Price List by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
        required: true
      responses:
        201:
          description: Created
        202:
          description: Async
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /priceLists/:
    get:
      operationId: getPriceListsPage
      tags:
      - PriceList
      summary: Gets a list of Price Lists.
      parameters:
      - name: page
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceList'
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
  /priceList/:
    post:
      operationId: postPriceList
      tags:
      - PriceList
      summary: Creates or updates a Price List.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceList'
          application/xml:
            schema:
              $ref: '#/components/schemas/PriceList'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceList'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
  /tierPrices/{id}:
    get:
      operationId: getTierPrice
      tags:
      - TierPrice
      summary: Gets a Tier Price by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierPrice'
            application/xml:
              schema:
                $ref: '#/components/schemas/TierPrice'
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.read
    delete:
      operationId: deleteTierPrice
      tags:
      - TierPrice
      summary: Deletes a Tier Price by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      responses:
        204:
          description: No content
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
    patch:
      operationId: patchTierPrice
      tags:
      - TierPrice
      summary: Updates a Tier Price by ID.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
          description: The resource Id, or external reference code Id if it's prefixed
            with ext-
        examples:
          localId:
            summary: Local identifier
            value: "23456"
          externalId:
            summary: External idenfitifer
            value: ext-uniqueId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TierPrice'
          application/xml:
            schema:
              $ref: '#/components/schemas/TierPrice'
        required: true
      responses:
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          description: Authentication information is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
      - BearerAuth: []
      - OAuth2:
        - HeadlessCommerceAdminPricing.write
components:
  schemas:
    Discount:
      required:
      - limitationType
      - target
      - title
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          example: 30130
        active:
          type: boolean
          example: true
        couponCode:
          type: string
          example: SAVE20
        displayDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        groupId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 23130
        percentageLevel1:
          minimum: 0
          type: number
          format: bigdecimal
          example: 20
        percentageLevel2:
          minimum: 0
          type: number
          format: bigdecimal
          example: 0
        percentageLevel3:
          minimum: 0
          type: number
          format: bigdecimal
          example: 0
        percentageLevel4:
          minimum: 0
          type: number
          format: bigdecimal
          example: 0
        limitationType:
          type: string
          example: unlimited
        limitationTimes:
          minimum: 0
          type: integer
          format: int32
          example: 0
        maximumDiscountAmount:
          minimum: 0
          type: number
          format: bigdecimal
          example: 25
        neverExpire:
          type: boolean
          example: true
        numberOfUse:
          minimum: 0
          type: integer
          format: int32
          example: 5
        target:
          type: string
          example: subtotal
        title:
          type: string
          example: 20% Off
        useCouponCode:
          type: boolean
          example: true
        usePercentage:
          type: boolean
          example: true
    DiscountCategory:
      required:
      - categoryId
      - discountId
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30643
        discountId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30324
        productId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30130
    DiscountProduct:
      required:
      - discountId
      - productId
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30643
        discountId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30324
        productId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30130
    DiscountRule:
      required:
      - discountId
      - type
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30643
        discountId:
          minimum: 0
          type: integer
          format: int64
          readOnly: true
          example: 30324
        type:
          type: string
          example: cart-total
        typeSettings:
          type: string
          example: "22.50"
    Error:
      required:
      - errorCode
      - errorDescription
      - message
      - status
      type: object
      properties:
        message:
          type: string
          readOnly: true
          example: No CommerceCurrency exists with the key {groupId=41811, code=US
            Dollar}
        errorDescription:
          type: string
          readOnly: true
          example: Unable to find currency. Currency code should be expressed with
            3-letter ISO 4217 format.
        status:
          type: integer
          description: HTTP Status code
          readOnly: true
          example: 404
        errorCode:
          type: integer
          description: Internal error code mapping
          readOnly: true
          example: 996
    PriceEntry:
      required:
      - commercePriceListId
      - externalReferenceCode
      - price
      - promoPrice
      - standardPrice
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          example: 30130
        commercePriceListId:
          minimum: 0
          type: integer
          format: int64
          example: 20078
        commerceProductInstanceId:
          minimum: 0
          type: integer
          format: int64
          example: 30130
        hasTierPrice:
          type: boolean
          example: true
        standardPrice:
          type: boolean
          example: true
        price:
          minimum: 0
          type: number
          format: bigdecimal
          example: 30130
        promoPrice:
          minimum: 0
          type: number
          format: bigdecimal
          example: 30130
        externalReferenceCode:
          type: string
          example: AB-34098-789-N
        skuExternalReferenceCode:
          type: string
          example: CAB-34098-789-N
        sku:
          type: string
          example: Blue handle, 00001l, 70cm, lifetime warranty
    PriceList:
      required:
      - active
      - currency
      - externalReferenceCode
      - name
      - neverExpire
      - priority
      type: object
      properties:
        commercePriceListId:
          minimum: 0
          type: integer
          format: int64
          example: 20178
        displayDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        catalogId:
          minimum: 0
          type: integer
          format: int64
          example: 23130
        neverExpire:
          type: boolean
          example: true
        priority:
          type: number
          format: double
          example: 1.2
        active:
          type: boolean
          example: true
        externalReferenceCode:
          type: string
          example: AB-34098-789-N
        currency:
          type: string
          example: EUR
        name:
          type: string
          example: Laptops, Beverages
        id:
          minimum: 0
          type: integer
          format: int64
          example: 30130
    TierPrice:
      required:
      - commercePriceEntryId
      - externalReferenceCode
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int64
          example: 31130
        commercePriceEntryId:
          minimum: 0
          type: integer
          format: int64
          example: 30130
        externalReferenceCode:
          type: string
          example: AB-34098-789-N
        minimumQuantity:
          minimum: 0
          type: integer
          format: int32
          example: 5
        price:
          minimum: 0
          type: number
          format: bigdecimal
          example: 25
        priceEntryExternalReferenceCode:
          type: string
          example: CAB-34098-789-N
        promoPrice:
          minimum: 0
          type: number
          format: bigdecimal
          example: 20
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    idPathParam:
      name: id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
        description: The resource Id, or external reference code Id if it's prefixed
          with ext-
      examples:
        localId:
          summary: Local identifier
          value: "23456"
        externalId:
          summary: External idenfitifer
          value: ext-uniqueId
    idPathParamInt:
      name: id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        minimum: 0
        type: integer
        description: The resource Id
        format: int64
        example: 30130
    pageQueryParam:
      name: page
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: integer
    pageSizeQueryParam:
      name: pageSize
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: integer
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            HeadlessCommerceAdminPricing.read: Grants read access
            HeadlessCommerceAdminPricing.write: Grants write access
            HeadlessCommerceAdminPricing.admin: Grants access to admin operations
    BearerAuth:
      type: http
      scheme: bearer

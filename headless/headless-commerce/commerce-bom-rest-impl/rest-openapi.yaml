components:
    parameters:
        idPathParam:
            in: path
            explode: false
            name: id
            required: true
            schema:
                description:
                    The resource Id
                example: 30130
                format: int64
                minimum: 0
                type: integer
            style: simple
        keywordsQueryParam:
            in: query
            explode: true
            name: q
            required: false
            schema:
                example: Product1
                type: string
            style: form
    responses:
        NotFound:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                application/xml:
                    schema:
                        $ref: '#/components/schemas/Error'
            description:
                The specified resource was not found
        UnauthorizedError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
                application/xml:
                    schema:
                        $ref: '#/components/schemas/Error'
            description:
                Authentication information is missing or invalid
    schemas:
        Area:
            properties:
                breadcrumbs:
                    example:
                        - id: 31130
                          name: Item 1
                          slug: /Item-1
                          street2: /Item/31130
                          thumbnail: /schema.jpg
                    items:
                        $ref: '#/components/schemas/Breadcrumb'
                    type: array
                data:
                    $ref: '#/components/schemas/AreaData'
            type: object
        AreaData:
            properties:
                id:
                    example: Name 1
                    type: string
                imageUrl:
                    example: Name 1
                    type: string
                name:
                    example: Name 1
                    type: string
                products:
                    example:
                        - id: 29130
                          name: Product 1
                          price: $ 12.99
                          sku: SKU01
                          thumbnailUrl: /product_thumbnail.png
                          url: /productUrl
                    items:
                        $ref: '#/components/schemas/Product'
                    type: array
                spots:
                    example:
                        - id: 34130
                          number: 3
                          positionX: 33.54
                          positionY: 33.54
                          productId: 29130
                    items:
                        $ref: '#/components/schemas/Spot'
                    type: array
        Brand:
            properties:
                id:
                    example: 31130
                    format: int64
                    minimum: 0
                    type: integer
                models:
                    example:
                        - id: 31231
                          name: Model 1
                          year: "2019"
                    items:
                        $ref: '#/components/schemas/Model'
                    type: array
                name:
                    example: Brand 1
                    type: string
            type: object
        Breadcrumb:
            properties:
                label:
                    example: Item 1
                    type: string
                url:
                    example: /folder/32344
                    type: string
            type: object
        Error:
            properties:
                errorCode:
                    description:
                        Internal error code mapping
                    example: 996
                    readOnly: true
                    type: integer
                errorDescription:
                    example: Unable to find Item.
                    readOnly: true
                    type: string
                message:
                    example: No CommerceBOMItem exists with commerceBOMItemId 31300
                    readOnly: true
                    type: string
                status:
                    description:
                        HTTP Status code
                    example: 404
                    readOnly: true
                    type: integer
            required:
                - errorCode
                - errorDescription
                - message
                - status
            type: object
        Folder:
            properties:
                breadcrumbs:
                    example:
                        - id: 31130
                          name: Item 1
                          slug: /Item-1
                          street2: /Item/31130
                          thumbnail: /schema.jpg
                    items:
                        $ref: '#/components/schemas/Breadcrumb'
                    type: array
                data:
                    $ref: '#/components/schemas/ItemData'
            type: object
        Item:
            properties:
                id:
                    example: 31130
                    format: int64
                    minimum: 0
                    type: integer
                name:
                    example: Item 1
                    type: string
                slug:
                    example: Item-1
                    type: string
                thumbnail:
                    example: /schema.jpg
                    type: string
                type:
                    enum:
                        - area
                        - folder
                    example: folder
                    type: string
                url:
                    example: /folder/31130
                    type: string
            type: object
        ItemData:
            properties:
                compatibilities:
                    example:
                        - models:
                              - id: 31231
                                name: Model 1
                                year: "2019"
                          name: Brand 1
                    items:
                        $ref: '#/components/schemas/Brand'
                    type: array
                content:
                    example:
                        - id: 31130
                          name: Item 1
                          slug: /Item-1
                          street2: /Item/31130
                          thumbnail: /schema.jpg
                    items:
                        $ref: '#/components/schemas/Item'
                    type: array
                products:
                    example:
                        - id: 29130
                          name: Product 1
                          price: $ 12.99
                          sku: SKU01
                          thumbnailUrl: /product_thumbnail.png
                          url: /productUrl
                    items:
                        $ref: '#/components/schemas/Product'
                    type: array
                spots:
                    example:
                        - id: 34130
                          number: 3
                          positionX: 33.54
                          positionY: 33.54
                          productId: 29130
                    items:
                        $ref: '#/components/schemas/Spot'
                    type: array
            type: object
        Model:
            properties:
                id:
                    example: 31130
                    format: int64
                    minimum: 0
                    type: integer
                name:
                    example: Brand 1
                    type: string
                year:
                    example: "2019"
                    type: string
            type: object
        Position:
            properties:
                x:
                    example: 33.54
                    format: double
                    type: number
                y:
                    example: 33.54
                    format: double
                    type: number
            type: object
        Product:
            properties:
                id:
                    example: sar2-fa3w-ffaw-waw3
                    type: string
                name:
                    example: Product 1
                    type: string
                price:
                    example: $ 12.99
                    type: string
                sku:
                    example: SKU01
                    type: string
                thumbnailUrl:
                    example: /product_thumbnail.jpg
                    type: string
                url:
                    example: /productUrl
                    type: string
            type: object
        Spot:
            properties:
                id:
                    example: 33130
                    format: int64
                    minimum: 0
                    type: integer
                number:
                    example: 3
                    format: int32
                    minimum: 0
                    type: integer
                position:
                    $ref: '#/components/schemas/Position'
                productId:
                    example: 123e4567-e89b-12d3-a456-426655440000
                    type: string
                sku:
                    example: SKU01
                    type: string
            type: object
    securitySchemes:
        BasicAuth:
            scheme: basic
            type: http
        BearerAuth:
            scheme: bearer
            type: http
        OAuth2:
            flows:
                authorizationCode:
                    authorizationUrl: /oauth/authorize
                    scopes:
                        CommerceOpenApiAdmin.admin: Grants access to admin operations
                        CommerceOpenApiAdmin.read: Grants read access
                        CommerceOpenApiAdmin.write: Grants write access
                    tokenUrl: /oauth/token
            type: oauth2
info:
    contact:
        email: team-commerce@liferay.com
        name: Commerce Team
    description:
        Liferay Commerce BOM API
    license:
        name: GNU Lesser General Public License 2.1
        url: https://www.gnu.org/licenses/lgpl-2.1.html
    title: Liferay Commerce BOM API
    version: "1.0"
openapi: 3.0.0
paths:
    /areas/{id}/spot/:
        post:
            operationId: postAreaIdSpot
            parameters:
                - in: path
                  explode: false
                  name: id
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Spot'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Spot'
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Spot'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Spot'
                    description:
                        Created
                400:
                    description:
                        Invalid input
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Unexpected error
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.write
            summary: Creates a Spot related to an area.
            tags:
                - Spot
    /areas/{id}/spot/{spotId}:
        delete:
            operationId: deleteAreaIdSpot
            parameters:
                - in: path
                  explode: false
                  name: id
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
                - in: path
                  explode: false
                  name: spotId
                  required: true
                  schema:
                      description:
                          The spot Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            responses:
                200:
                    description:
                        No content
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.write
            summary: Deletes a Spot by its ID.
            tags:
                - Spot
        put:
            operationId: putAreaIdSpot
            parameters:
                - in: path
                  explode: false
                  name: id
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
                - in: path
                  explode: false
                  name: spotId
                  required: true
                  schema:
                      description:
                          The spot Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Spot'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/Spot'
                required: true
            responses:
                200:
                    description:
                        Updated
                400:
                    description:
                        Invalid input
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Unexpected error
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.write
            summary: Updates a Spot by its ID.
            tags:
                - Spot
    /areas/{id}:
        get:
            operationId: getArea
            parameters:
                - in: path
                  explode: false
                  name: id
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Area'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Area'
                    description:
                        Successful operation
                400:
                    description:
                        Invalid input
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Unexpected error
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.read
            summary: Gets the Area by ID.
            tags:
                - Area
    /folders/{id}:
        get:
            operationId: getFolder
            parameters:
                - in: path
                  explode: false
                  name: id
                  required: true
                  schema:
                      description:
                          The resource Id
                      example: 30130
                      format: int64
                      minimum: 0
                      type: integer
                  style: simple
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Folder'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Folder'
                    description:
                        Successful operation
                400:
                    description:
                        Invalid input
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Unexpected error
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.read
            summary: Gets the Folder by ID.
            tags:
                - Folder
    /products/:
        get:
            operationId: getProductsPage
            parameters:
                - in: query
                  explode: true
                  name: q
                  required: false
                  schema:
                      example: Product1
                      type: string
                  style: form
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Product'
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: '#/components/schemas/Product'
                                type: array
                    description:
                        Successful operation
                400:
                    description:
                        Invalid input
                401:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Authentication information is missing or invalid
                404:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        The specified resource was not found
                500:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description:
                        Unexpected error
            security:
                - BasicAuth: []
                - BearerAuth: []
                - OAuth2:
                      - CommerceBOM.read
            summary: Gets a list of Product.
            tags:
                - Product
servers:
    - description:
          Liferay Commerce API server
      url: https://commerce.{environment}.liferay.com/commerce-bom/{basePath}
      variables:
          basePath:
              default: v1.0
          environment:
              default: api
              enum:
                  - api
                  - api.dev
                  - api.uat
    - description:
          Liferay Commerce Local Development (Hosts file)
      url: '{protocol}://{host}:{port}/o/commerce-bom/{basePath}'
      variables:
          basePath:
              default: v1.0
          host:
              default: test.dev
          port:
              default: "8080"
              enum:
                  - "443"
                  - "8080"
                  - "8443"
          protocol:
              default: http
              enum:
                  - http
                  - https
    - description:
          Liferay Commerce Local Development with Ngrok
      url: '{protocol}://{host}.ngrok.io/o/commerce-bom/{basePath}'
      variables:
          basePath:
              default: v1.0
          host:
              default: commerce
          protocol:
              default: http
              enum:
                  - http
                  - https
    - description:
          SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/liferayinc/commerce-bom/1.0